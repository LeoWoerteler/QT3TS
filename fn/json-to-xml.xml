<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-json-to-xml" covers="fn-json-to-xml">
  <description>json-to-xml() function introduced in XPath 3.1</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-31/"
    idref="func-json-to-xml"/>

   <dependency type="spec" value="XP31+ XQ31+"/>

  <environment name="json-files">
      <resource file="json-to-xml/data001.json"
                media-type="text/plain"
                encoding="utf-8"
                uri="http://www.w3.org/qt3/json/data001-json">
         <description>UTF-8 encoded plain text.</description>
         <created by="O'Neil Delpratt" on="2015-02-23"/>
      </resource>
      <resource file="json-to-xml/escapeText.json"
                media-type="text/plain"
                encoding="utf-8"
                uri="http://www.w3.org/qt3/json/escapeText-json">
         <description>UTF-8 encoded plain text.</description>
         <created by="O'Neil Delpratt" on="2015-02-23"/>
      </resource>
      <resource file="json-to-xml/data005.json"
                media-type="text/plain"
                encoding="utf-8"
                uri="http://www.w3.org/qt3/json/data005-json">
         <description>UTF-8 encoded plain text.</description>
         <created by="O'Neil Delpratt" on="2015-02-23"/>
         <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      </resource>
      <namespace prefix="j" uri="http://www.w3.org/2005/xpath-functions"/>
     </environment>

    <environment name="json-ns">
        <schema uri="http://www.w3.org/2005/xpath-functions" role="import"/>
        <!-- Either the test driver or the product under test is expected to recognize this URI -->
        <!-- XPath test drivers are expected to recognize role='import' See bug issue 28997 -->
        <namespace prefix="j" uri="http://www.w3.org/2005/xpath-functions"/>
    </environment>


   <test-case name="json-to-xml-001">
      <description>Empty object as document-node</description>
       <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns" />
      <test>fn:json-to-xml('{}')</test>
      <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>document-node()</assert-type>
                <assert-xml ignore-prefixes="true"><![CDATA[<map xmlns="http://www.w3.org/2005/xpath-functions"/>]]></assert-xml>
            </all-of>
      </result>
   </test-case>

   <test-case name="json-to-xml-002">
      <description>Empty array as document-node</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns" />
      <test>fn:json-to-xml('[]')</test>
      <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>document-node()</assert-type>
                <assert-xml ignore-prefixes="true"><![CDATA[<array xmlns="http://www.w3.org/2005/xpath-functions"/>]]></assert-xml>
            </all-of>
      </result>
   </test-case>

   <test-case name="json-to-xml-003">
      <description>Array Number</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="Spec says the result is a document node"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns" />
      <test>fn:json-to-xml('[1]')</test>
      <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>document-node(element(j:array))</assert-type>
                <assert>count($result/*) eq 1</assert>
                <assert>$result/*/*[1] instance of element(j:number,xs:untyped)</assert>
                <assert>xs:double($result/*[1]) eq 1</assert>
                <assert-xml ignore-prefixes="true"><![CDATA[<array xmlns="http://www.w3.org/2005/xpath-functions"><number>1</number></array>]]></assert-xml>
            </all-of>
      </result>
   </test-case>

   <test-case name="json-to-xml-004">
      <description>Array String</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="Spec says the result is a document node"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns" />
      <test>fn:json-to-xml('[&#34;a&#34;]')</test>
      <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>document-node(element(*))</assert-type>
                <assert>count($result/*) eq 1</assert>
                <assert>$result/*/*[1] instance of element(j:string,xs:untyped)</assert>
                <assert>xs:string($result/*/*[1]) eq "a"</assert>
                <assert-xml ignore-prefixes="true"><![CDATA[<array xmlns="http://www.w3.org/2005/xpath-functions"><string>a</string></array>]]></assert-xml>
            </all-of>
      </result>
   </test-case>

   <test-case name="json-to-xml-005">
      <description>Array true</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="Spec says the result is a document node"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns" />
      <test>fn:json-to-xml('[true]')</test>
      <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>document-node(element(*))</assert-type>
                <assert>count($result/*) eq 1</assert>
                <assert>$result/*/*[1] instance of element(j:boolean,xs:untyped)</assert>
                <assert>xs:boolean($result/*[1]) eq true()</assert>
                <assert-xml ignore-prefixes="true"><![CDATA[<array xmlns="http://www.w3.org/2005/xpath-functions"><boolean>true</boolean></array>]]></assert-xml>
            </all-of>
      </result>
   </test-case>

   <test-case name="json-to-xml-006">
      <description>Array false</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="Spec says the result is a document node"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns" />
      <test>fn:json-to-xml('[false]')</test>
      <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>document-node(element(*))</assert-type>
                <assert>count($result/*) eq 1</assert>
                <assert>$result/*/*[1] instance of element(j:boolean,xs:untyped)</assert>
                <assert>xs:boolean($result/*[1]) eq false()</assert>
                <assert-xml ignore-prefixes="true"><![CDATA[<array xmlns="http://www.w3.org/2005/xpath-functions"><boolean>false</boolean></array>]]></assert-xml>
            </all-of>
      </result>
   </test-case>

   <test-case name="json-to-xml-007">
      <description>Array null</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="Spec says the result is a document node"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns" />
      <test>fn:json-to-xml('[null]')</test>
      <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>document-node(element(*))</assert-type>
                <assert>count($result/*) eq 1</assert>
                <assert>$result/*/*[1] instance of element(j:null,xs:untyped)</assert>
                <assert>empty($result/*[1]/*[1]/(*|text()))</assert>
                <assert-xml ignore-prefixes="true"><![CDATA[<array xmlns="http://www.w3.org/2005/xpath-functions"><null/></array>]]></assert-xml>
            </all-of>
      </result>
   </test-case>

   <test-case name="json-to-xml-008">
      <description>Larger 2</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="Spec says the result is a document node"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-files"/>
      <test>fn:json-to-xml(unparsed-text('http://www.w3.org/qt3/json/data001-json'))</test>
      <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>document-node(element(j:map))</assert-type>
                <assert>count($result/*) eq 1</assert>
                <assert>$result/j:map/j:map[@key='glossary']/j:string[@key='title']</assert>
                <assert>$result/j:map/j:map[@key='glossary']/j:map[@key='GlossDiv']</assert>
            </all-of>
      </result>
   </test-case>

   <test-case name="json-to-xml-009">
      <description>Larger 2</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <environment ref="json-files"/>
      <test>fn:json-to-xml(unparsed-text('http://www.w3.org/qt3/json/data005-json'))</test>
      <result>
            <all-of>
                <assert>$result/j:map/j:map[@key='menu']/j:string[@key='header'][.='SVG Viewer']</assert>
                <assert>$result/j:map/j:map[@key='menu']/j:array[@key='items']/j:map[not(@*)]/j:string[@key='id'][.='Open']</assert>
            </all-of>
      </result>
   </test-case>

   <test-case name="json-to-xml-010">
      <description>Larger 2</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-files"/>
      <test>fn:json-to-xml(unparsed-text('http://www.w3.org/qt3/json/escapeText-json'))</test>
      <result>
            <assert-xml ignore-prefixes="true"><![CDATA[<map xmlns="http://www.w3.org/2005/xpath-functions"><string key="key">Data with " within it</string></map>]]></assert-xml>
      </result>
   </test-case>


   <test-case name="json-to-xml-011">
      <description>Larger 2</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-files"/>
      <test>fn:json-to-xml(unparsed-text('http://www.w3.org/qt3/json/escapeText-json'))//j:string</test>
      <result>
            <assert-xml ignore-prefixes="true"><![CDATA[<string xmlns="http://www.w3.org/2005/xpath-functions" key="key">Data with " within it</string>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="json-to-xml-012">
      <description>Larger 2</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Debbie Lockett" on="2015-08-07" change="Change expected result, quotes not escaped, see bug #28995"/>
      <modified by="Michael Kay" on="2016-09-29" change="Change expected result, existing escapes are retained, see bug #29872"/>
      <modified by="Michael Kay" on="2016-10-04" change="Revert previous change, see reopening of bug #28812"/>
      <environment ref="json-files"/>
      <test>
         fn:json-to-xml(unparsed-text('http://www.w3.org/qt3/json/escapeText-json'), map{'escape':true()})//j:string
      </test>
      <result>
         <all-of>
            <assert-type>element(j:string)</assert-type>
            <assert>$result/self::*:string eq 'Data with " within it'</assert>
            <assert>$result/self::*:string/@key eq 'key'</assert>
            <assert>namespace-uri($result/self::*:string) eq 'http://www.w3.org/2005/xpath-functions'</assert>
            </all-of>
      </result>
   </test-case>


   <test-case name="json-to-xml-013">
      <description>Larger 2</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('[&#34;Data with \&#34; within it&#34;]')//j:string
      </test>
      <result>
         <all-of>
                <assert-type>element(j:string)</assert-type>
                <assert-xml><![CDATA[<string xmlns="http://www.w3.org/2005/xpath-functions">Data with " within it</string>]]></assert-xml>
            </all-of>
      </result>
   </test-case>


   <test-case name="json-to-xml-014">
      <description>Larger 2</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{&#34;Key \&#34; with quote&#34;:&#34;Data with \&#34; within it&#34;}')//j:string
      </test>
      <result>
         <all-of>
                <assert-type>element(j:string)</assert-type>
                <assert-xml><![CDATA[<string
                 xmlns="http://www.w3.org/2005/xpath-functions" key="Key &#34; with quote">Data with " within it</string>]]></assert-xml>
            </all-of>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-015">
      <description>Accept Byte-Order-Mark</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml(codepoints-to-string(65279)||'[1]')
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<array 
         xmlns="http://www.w3.org/2005/xpath-functions"><number>1</number></array>
         ]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-016">
      <description>Validate</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <environment ref="json-ns"/>
      <dependency type="feature" value="schemaImport"/>
      <test>
         fn:json-to-xml('[1]', map{'validate':true()})
      </test>
      <result>
         <all-of>
           <assert>data($result/j:array/j:number) instance of xs:double</assert>
         </all-of>  
      </result>
   </test-case>
   
   <test-case name="json-to-xml-017">
      <description>Validate</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <modified by="O'Neil Delpratt" on="2015-09-11" change="Fix related to bug issue 28997" />
      <environment ref="json-ns"/>
      <dependency type="feature" value="schemaImport"/>
      <dependency type="spec" value="XP31+"/>
      <test>
         fn:json-to-xml('[1]', map{'validate':true()}) instance of document-node(schema-element(j:array))
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="json-to-xml-017b">
      <description>Validate</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <modified by="O'Neil Delpratt" on="2015-09-11" change="Added test related to bug issue 28997" />
      <dependency type="feature" value="schemaImport"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
         import schema namespace j="http://www.w3.org/2005/xpath-functions";
         fn:json-to-xml('[1]', map{'validate':true()}) instance of document-node(schema-element(j:array))
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-018">
      <description>Duplicate entries in a map: default is to retain duplicates</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"a":3, "b":4, "a":5}')
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"><number key="a"
         >3</number><number key="b">4</number><number key="a">5</number></map>
         ]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-019">
      <description>Not-Unescaped key</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Christian Gruen" on="2015-10-21" change="Schema import dependency removed."/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"a\\":3, "b\\":4}', map{'escape':true()})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"><number key="a\\" escaped-key="true"
         >3</number><number key="b\\" escaped-key="true">4</number></map>
         ]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-020">
      <description>Unescaped key</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Christian Gruen" on="2015-10-21" change="Schema import dependency removed."/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"a\\":3, "b\\":4}', map{'escape':false()})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
      xmlns="http://www.w3.org/2005/xpath-functions"><number key="a\"
      >3</number><number key="b\">4</number></map>]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-021">
      <description>Character invalid in XML 1.0 in a string and a key: escape=true</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Debbie Lockett" on="2015-08-07" change="Result change see bug #28996"/>
      <modified by="Michael Kay" on="2016-09-29" change="Result change see bug #29872"/>
      <modified by="Michael Kay" on="2016-10-04" change="Revert previous change, see reopening of bug #28812"/>
      <environment ref="json-ns"/>
      <dependency type="xml-version" value="1.0"/>
      <test>
         fn:json-to-xml('{"a":"\u000C", "\u0007":"bell"}', map{'escape':true()})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"
         ><string key="a" escaped="true">\f</string
         ><string key="\u0007" escaped-key="true">bell</string></map>
         ]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-022">
      <description>Character invalid in XML 1.0 in a string and a key: escape=false</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <environment ref="json-ns"/>
      <dependency type="xml-version" value="1.0"/>
      <test>
         fn:json-to-xml('{"a":"\u000C", "\u0007":"bell"}', map{'escape':false()})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"
         ><string key="a">&#xFFFD;</string><string key="&#xFFFD;">bell</string></map>
         ]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-023">
      <description>Unpaired surrogates: escape=false</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <dependency type="xml-version" value="1.0"/>
      <test>
         fn:json-to-xml('{"a":"\uDA00", "\uDD00":"bell"}', map{'escape':false()})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"
         ><string key="a">&#xFFFD;</string><string key="&#xFFFD;">bell</string></map>]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-024">
      <description>Unpaired surrogates: escape=true</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <dependency type="xml-version" value="1.0"/>
      <test>
         fn:json-to-xml('{"a":"\uDA00", "\uDD00":"bell"}', map{'escape':true()})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<j:map 
         xmlns:j="http://www.w3.org/2005/xpath-functions"
         ><j:string escaped="true" key="a">\uDA00</j:string><j:string escaped-key="true" key="\uDD00">bell</j:string></j:map>]]></assert-xml> 
      </result>
   </test-case>

   <test-case name="json-to-xml-025">
      <description>Character invalid in XML 1.0 in a string and a key: fallback</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <environment ref="json-ns"/>
      <dependency type="xml-version" value="1.0"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-to-xml('{"a":"\u000C", "\u0007":"bell"}', 
              map{'escape':false(), 'fallback':function($s){'??'}})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"
         ><string key="a">??</string><string key="??">bell</string></map>
         ]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-026">
      <description>Unpaired surrogates: fallback</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <dependency type="xml-version" value="1.0"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-to-xml('{"a":"\uDA00", "\uDD00":"bell"}', 
             map{'escape':false(), 'fallback':function($s){'??' || translate($s, 'abcdef', 'ABCDEF')  || '??'}})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"
         ><string key="a">??\uDA00??</string><string key="??\uDD00??">bell</string></map>]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-027">
      <description>Unpaired surrogates: escape=true, fallback</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Debbie Lockett" on="2015-06-17" change="test and result corrections to actually use unescape=false"/>
      <modified by="Michael Kay" on="2015-07-16" change="See bug 28946: this combination of options is now an error"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <dependency type="xml-version" value="1.0"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-to-xml('{"a":"\uDA00", "\uDD00":"bell"}', 
            map{'escape':true(), 'fallback':function($s){'??' || translate($s, 'abcdef', 'ABCDEF') || '??'}})
      </test>
      <result>
         <error code="FOJS0005"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-028">
      <description>Supply empty sequence ()</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-to-xml((), 
            map{'escape':false(), 'fallback':function($s){'??' || translate($s, 'abcdef', 'ABCDEF') || '??'}})
      </test>
      <result>
         <assert-empty/> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-029">
      <description>Supply empty options map</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <test>
         fn:json-to-xml('23', map{})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<number 
         xmlns="http://www.w3.org/2005/xpath-functions">23</number>]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-030">
      <description>Exponent with upper-case E. Lexical representation retained, see bug 28179 </description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <test>
         fn:json-to-xml('23E0', map{})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<number 
         xmlns="http://www.w3.org/2005/xpath-functions">23E0</number>]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-031">
      <description>
        Exponent with lower-case E and sign; leading zero OK if followed by ".". 
        Lexical representation retained, see bug 28179
      </description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <test>
         fn:json-to-xml('0.23e+02')
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<number 
         xmlns="http://www.w3.org/2005/xpath-functions">0.23e+02</number>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-032">
      <description>Zero is OK</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <test>
         fn:json-to-xml('0')
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<number 
         xmlns="http://www.w3.org/2005/xpath-functions">0</number>]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-033">
      <description>Negative zero is OK</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <test>
         fn:json-to-xml('-0')
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<number 
         xmlns="http://www.w3.org/2005/xpath-functions">-0</number>]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-034">
      <description>Zero-length keys and values are OK</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <test>
         fn:json-to-xml('{"":"", "0":"0"}')
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"><string key=""/><string key="0">0</string></map>]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-035">
      <description>Empty sequence is OK</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <test>
         fn:json-to-xml(())
      </test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-036">
      <description>Duplicate entries in a map: duplicates=use-first</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"a":3, "b":4, "a":5}', map{"duplicates":"use-first"})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"><number key="a"
         >3</number><number key="b">4</number></map>
         ]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-037">
      <description>Validate a more complex example</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-09-11" change="Fix according to bug 28997"/>
      <modified by="Josh Spiegel" on="2016-01-11" change="bug 28997"/>
      <environment ref="json-ns"/>
      <dependency type="feature" value="schemaImport"/>
      <dependency type="spec" value="XP31+"/>
      <test>
         (fn:json-to-xml('{"a":3, "b":true, "c":null, "d":[], "e":[1E2, ""], "f":{"1":true, "2":false}, "g\n":"h\n"}',
            map{'validate':true()}))
         instance of document-node(schema-element(Q{http://www.w3.org/2005/xpath-functions}map))
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="json-to-xml-037b">
      <description>Validate a more complex example. Test created from json-to-xml-037 in accordance to bug 28997</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <modified by="O'Neil Delpratt" on="2015-09-11" change="Added test case according to bug 28997"/>
      <modified by="Josh Spiegel" on="2016-01-11" change="bug 28997"/>
      <dependency type="feature" value="schemaImport"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
         import schema namespace j="http://www.w3.org/2005/xpath-functions";
         (fn:json-to-xml('{"a":3, "b":true, "c":null, "d":[], "e":[1E2, ""], "f":{"1":true, "2":false}, "g\n":"h\n"}',
            map{'validate':true()}))
         instance of document-node(schema-element(Q{http://www.w3.org/2005/xpath-functions}map))
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-038">
      <description>Validate a more complex example</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Josh Spiegel" on="2016-01-11" change="bug 28997"/>
      <environment ref="json-ns"/>
      <dependency type="feature" value="schemaImport"/>
      <dependency type="spec" value="XP31+"/>
      <test>
         (fn:json-to-xml('{"a":3, "b":true, "c":null, "d":[], "e":[1E2, ""], "f":{"1":true, "2":false}, "g\n":"h\n"}', 
            map{'validate':true(), 'escape':true()})) instance of 
         document-node(schema-element(Q{http://www.w3.org/2005/xpath-functions}map))
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="json-to-xml-038b">
      <description>Validate a more complex example</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <modified by="O'Neil Delpratt" on="2015-09-11" change="Added test case according to bug 28997"/>
      <modified by="Josh Spiegel" on="2016-01-11" change="bug 28997"/>
      <dependency type="feature" value="schemaImport"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
         import schema namespace j="http://www.w3.org/2005/xpath-functions";
         (fn:json-to-xml('{"a":3, "b":true, "c":null, "d":[], "e":[1E2, ""], "f":{"1":true, "2":false}, "g\n":"h\n"}',
            map{'validate':true(), 'escape':true()})) instance of 
         document-node(schema-element(Q{http://www.w3.org/2005/xpath-functions}map))
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-039">
      <description>Unpaired surrogate</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-to-xml('"oh dear \uDEAD"', map{'fallback':function($s){substring($s, 3)}})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<string 
         xmlns="http://www.w3.org/2005/xpath-functions">oh dear DEAD</string>
         ]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-040">
      <description>Duplicate entries in a map: use-first</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"a":3, "b":4, "a":5, "c":5}', map{'duplicates':'use-first'})
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<map 
         xmlns="http://www.w3.org/2005/xpath-functions"><number key="a"
         >3</number><number key="b">4</number><number key="c">5</number></map>
         ]]></assert-xml> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-041">
      <description>Base URI of the result</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <test>
         static-base-uri() eq base-uri(fn:json-to-xml('true'))
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-042">
      <description>Duplicates after escaping</description>
      <created by="Michael Kay" on="2015-03-11"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Debbie Lockett" on="2015-08-07" change="Result change (plus description edit), see bug #28998"/>
      <modified by="Christian Gruen" on="2015-10-21" change="Schema import dependency removed."/>
      <modified by="Michael Kay" on="2016-09-29" change="Spec change, bug 29872, escaped characters retain their escaped form."/>
      <modified by="Michael Kay" on="2016-10-04" change="Revert previous change, see reopening of bug #28812"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"\n":1, "\u000A":2}', map{'escape':true(), 'duplicates':'reject'})
      </test>
        <result>
           <error code="FOJS0003"/>
        </result>
   </test-case>

   <test-case name="json-to-xml-043">
      <description>Lower case hex digits are allowed</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change for bug 28174"/>
      <test>
         fn:json-to-xml('"\u005c"')
      </test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<string 
         xmlns="http://www.w3.org/2005/xpath-functions">\</string>
         ]]></assert-xml> 
      </result>
   </test-case>

   <test-case name="json-to-xml-044">
      <description>Alternate validation dynamically</description>
      <created by="Josh Spiegel" on="2015-07-27"/>
      <modified by="Debbie Lockett" on="2015-08-12" change="Added XQuery dependency"/>
      <modified by="Christian Gruen" on="2015-10-21" change="Schema import dependency added."/>
      <dependency type="spec" value="XQ31+"/>
      <dependency type="feature" value="schemaImport"/>
      <test>
         import schema "http://www.w3.org/2005/xpath-functions";
          
         for $i in 1 to 4
         let $validate := $i mod 2 eq 1
         let $options := map { 'validate' : $validate }
         return
             (fn:json-to-xml('{}', $options)/* instance of schema-element(fn:map))
      </test>
      <result>
         <assert-deep-eq>(fn:true(), fn:false(), fn:true(), fn:false())</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-045">
      <description>Alternate escape dynamically</description>
      <created by="Josh Spiegel" on="2015-07-27"/>
      <modified by="Debbie Lockett" on="2015-08-07" change="Modified assertion to work in XPath as well as XQuery"/>
      <modified by="Debbie Lockett" on="2015-08-12" change="Added XQuery dependency"/>
      <modified by="Christian Gruen" on="2015-10-21" change="Schema import dependency added."/>
      <dependency type="spec" value="XQ31+"/>
      <dependency type="feature" value="schemaImport"/>
      <test>
         import schema "http://www.w3.org/2005/xpath-functions";
          
         for $i in 1 to 4
         let $escape := $i mod 2 eq 1
         let $options := map { 'escape' : $escape }
         return
             fn:json-to-xml('"-\b-\t-\u0001-"', $options)/fn:string/fn:string()
      </test>
      <result>
         <assert-deep-eq>(1,1) ! ("-\b-\t-\u0001-", "-&#xFFFD;-&#x09;-&#xFFFD;-")</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-046">
      <description>Validated map children (which should have anonymous type annotations)</description>
      <created by="Josh Spiegel" on="2015-07-29"/>
      <modified by="Debbie Lockett" on="2015-08-12" change="Added XQuery dependency"/>
      <modified by="Christian Gruen" on="2015-10-21" change="Schema import dependency added."/>
      <dependency type="spec" value="XQ31+"/>
      <dependency type="feature" value="schemaImport"/>
      <test>
         import schema "http://www.w3.org/2005/xpath-functions";
         let $json := '
           {
             "a" : "foo",
             "b" : 123,
             "c"   : null,
             "d"   : true,
             "e" : false,
             "f" : [1],
             "g" : {}
           }
         '
         let $xml := json-to-xml($json, map { 'validate' : true() })/fn:map
         return (
            $xml/fn:string instance of element(fn:string, fn:stringType),
            $xml/fn:number instance of element(fn:number, fn:numberType),
            not($xml/fn:null instance of element(fn:null, fn:nullType)),
            $xml/fn:boolean instance of element(fn:boolean, fn:booleanType)+,
            $xml/fn:map instance of element(fn:map, fn:mapType),
            $xml/fn:array instance of element(fn:array, fn:arrayType)
          )
      </test>
      <result>
         <assert>every $r in $result satisfies $r</assert>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-047">
      <description>Validated array children (which should have global type annotations)</description>
      <created by="Josh Spiegel" on="2015-07-29"/>
      <modified by="Debbie Lockett" on="2015-08-12" change="Added XQuery dependency"/>
      <modified by="Christian Gruen" on="2015-10-21" change="Schema import dependency added."/>
      <dependency type="spec" value="XQ31+"/>
      <dependency type="feature" value="schemaImport"/>
      <test>
         import schema "http://www.w3.org/2005/xpath-functions";
         let $json := '["foo",123,null,true,false,[],{}]'
         let $xml := json-to-xml($json, map { 'validate' : true() })/fn:array
         return (
            $xml/fn:string instance of element(fn:string, fn:stringType),
            $xml/fn:number instance of element(fn:number, fn:numberType),
            $xml/fn:null instance of element(fn:null, fn:nullType),
            $xml/fn:boolean instance of element(fn:boolean, fn:booleanType)+,
            $xml/fn:map instance of element(fn:map, fn:mapType),
            $xml/fn:array instance of element(fn:array, fn:arrayType)
          )
      </test>
      <result>
         <assert>every $r in $result satisfies $r</assert>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-048">
      <description>Special characters, with default escape=false</description>
      <created by="Debbie Lockett" on="2015-08-10"/>
      <test>json-to-xml('"\\\/\"\r\t\u0020"')</test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<string xmlns="http://www.w3.org/2005/xpath-functions">\/"&#13;&#009;&#032;</string>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-049">
      <description>Special characters, with escape=true</description>
      <created by="Debbie Lockett" on="2015-08-10"/>
      <modified by="Michael Kay" on="2016-08-30" change="spec change, solidus is now escaped"/>
      <modified by="Michael Kay" on="2016-09-29" change="spec change, bug29872, escape sequences in the input are retained unchanged"/>
      <modified by="Michael Kay" on="2016-10-04" change="Revert previous change, see reopening of bug #28812"/>
      <test>json-to-xml('"\\\/\"\r\t\u0020"', map {'escape':true()})</test>
      <result>
         <assert-xml ignore-prefixes="true"><![CDATA[<string xmlns="http://www.w3.org/2005/xpath-functions" escaped="true">\\/"\r\t </string>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="json-to-xml-error-001">
      <description>Empty string</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code"/>
      <test>
         fn:json-to-xml('')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

   <test-case name="json-to-xml-error-002">
      <description>Unknown token</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{error}')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

   <test-case name="json-to-xml-error-003">
      <description>Unknown token</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{terriblyWrong}')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

   <test-case name="json-to-xml-error-004">
      <description>Extra token</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml("{}extra token")
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

   <test-case name="json-to-xml-error-005">
      <description>Extra token</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{1:1}')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

   <test-case name="json-to-xml-error-006">
      <description>Extra token</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{true:1}')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>


   <test-case name="json-to-xml-error-007">
      <description>Extra token</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"key" 1}')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-008">
      <description>Extra token</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"key" :1 2}')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

  <test-case name="json-to-xml-error-009">
      <description>Leading + on the number</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('[+1]')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-010">
      <description>Redundant leading 0 on number</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('[01]')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-011">
      <description>Hex number</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('[1234A]')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

  <test-case name="json-to-xml-error-012">
      <description>Trailing backslash</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["123\"]')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

  <test-case name="json-to-xml-error-013">
      <description>short unicode</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["123\u234"]')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-014">
      <description>Trailing comma</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"key":123,}')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-015">
      <description>Trailing comma liberal spec</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('{"key":123 ,}', map{"liberal":false()})
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-016">
      <description>Trailing comma</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["key":123,]')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-017">
      <description>Trailing comma liberal spec</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["key":123 ,]', map{'liberal':true()})
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-018">
      <description>Trailing comma liberal spec</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
       <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
       <modified by="Debbie Lockett" on="2015-08-04" change="Alternate error code added, for bug 28994"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["String",]', map{'liberal':()})
      </test>
        <result>
           <any-of>
              <error code="FOJS0005"/>              
              <error code="XPTY0004"/>              
           </any-of>
        </result>
   </test-case>


    <test-case name="json-to-xml-error-019">
      <description>Trailing comma liberal spec</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
       <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
       <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["String"]', map{'liberal':'something'})
      </test>
        <result>
           <error code="XPTY0004"/>
        </result>
   </test-case>


    <test-case name="json-to-xml-error-020">
      <description>Validate option error</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
       <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
       <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["String"]', map{'validate':()})
      </test>
        <result>
           <error code="XPTY0004"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-021">
      <description>Validate option error</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
       <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
       <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["String"]', map{'validate':(true(),true())})
      </test>
        <result>
           <error code="XPTY0004"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-022">
      <description>Validate option error</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
       <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
       <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["String"]', map{'validate':'EMCA-262'})
      </test>
        <result>
           <error code="XPTY0004"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-023">
      <description>Validate option error</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
       <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
       <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["String"]', map{'escape':()})
      </test>
        <result>
           <error code="XPTY0004"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-024">
      <description>Validate option error</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
       <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
       <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["String"]', map{'escape':(true(),true())})
      </test>
        <result>
           <error code="XPTY0004"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-025">
      <description>Validate option error</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
      <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
       <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
       <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["String"]', map{'escape':'EMCA-262'})
      </test>
        <result>
           <error code="XPTY0004"/>
        </result>
   </test-case>

    <test-case name="json-to-xml-error-026">
      <description>Validate option error</description>
      <created by="John Lumley" on="2013-10-01"/>
      <modified by="O'Neil Delpratt" on="2015-02-11" change="This test case was ported from the XSLT30 test suite" />
       <modified by="Michael Kay" on="2015-03-06" change="error code, and put string in quotes"/>
       <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-ns"/>
      <test>
         fn:json-to-xml('["String"]', map{'fallback':'dummy'})
      </test>
        <result>
           <error code="XPTY0004"/>
        </result>
   </test-case>
   
   <test-case name="json-to-xml-error-027">
      <description>Form-feed not allowed as insignificant whitespace</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <environment ref="json-ns"/>
      <dependency type="xml-version" value="1.1"/>
      <test>
         fn:json-to-xml('[' || codepoints-to-string(12) || '1]')
      </test>
        <result>
            <error code="FOJS0001"/>
        </result>
   </test-case>
   
   <test-case name="json-to-xml-error-028">
      <description>Duplicates cause validation to fail</description>
      <created by="Michael Kay" on="2015-03-07"/>
      <environment ref="json-ns"/>
      <dependency type="feature" value="schemaImport"/>
      <test>
         fn:json-to-xml('{"a":3, "b":4, "a":3}', map{'validate':true()})
      </test>
      <result>
         <error code="FOJS0003"/> 
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-029">
      <description>Zero not allowed before another digit</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <test>
         fn:json-to-xml('-00')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-030">
      <description>Leading plus sign not allowed</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <test>
         fn:json-to-xml('+10')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-031">
      <description>Leading decimal point not allowed</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <test>
         fn:json-to-xml('.1')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-032">
      <description>Trailing decimal point not allowed</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <test>
         fn:json-to-xml('1.')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-033">
      <description>Trailing decimal point not allowed</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <test>
         fn:json-to-xml('1.e2')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-034">
      <description>Leading decimal point not allowed</description>
      <created by="Michael Kay" on="2015-03-09"/>
      <test>
         fn:json-to-xml('-.01')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-035">
      <description>Duplicate entries in a map: duplicates=reject</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <test>
         fn:json-to-xml('{"a":3, "b":4, "a":5}', map{"duplicates":"reject"})
      </test>
      <result>
         <error code="FOJS0003"/>
      </result>
   </test-case>
      
   <test-case name="json-to-xml-error-037">
      <description>Backslash at end of string</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <test>
         fn:json-to-xml('"oh dear \"')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-038">
      <description>Insufficient characters after \u</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <test>
         fn:json-to-xml('"oh dear \uAAA"')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-039">
      <description>Invalid character after \</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <test>
         fn:json-to-xml('"oh dear \xAA"')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-040">
      <description>Duplicate entries in a map: duplicates=use-last</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <test>
         fn:json-to-xml('{"a":3, "b":4, "c":5}', map{"duplicates":"use-last"})
      </test>
      <result>
         <error code="FOJS0005"/>
      </result>
   </test-case>
   
   <test-case name="json-to-xml-error-041">
      <description>Fallback function with wrong arity</description>
      <created by="Michael Kay" on="2015-03-10"/>
      <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-to-xml('"\uFFFF"', map{'fallback':concat#2})
      </test>
        <result>
           <error code="XPTY0004"/>
        </result>
   </test-case>
   
   <test-case name="json-to-xml-error-042">
      <description>Validate option error - inconsistent with retaining duplicates</description>
      <created by="Michael Kay" on="2015-03-11"/>
      <environment ref="json-ns"/>
      <dependency type="feature" value="schemaImport"/>
      <test>
         fn:json-to-xml('{"A":1, "A":2}', map{'validate':true(), 'duplicates':'retain'})
      </test>
        <result>
            <error code="FOJS0005"/>
        </result>
   </test-case>
   
   <test-case name="json-to-xml-error-043">
      <description>Duplicates after unescaping</description>
      <created by="Michael Kay" on="2015-03-11"/>
      <modified by="Christian Gruen" on="2015-10-21" change="Schema import dependency removed."/>
      <environment ref="json-ns"/>
      <dependency type="feature" value="schemaImport"/>
      <test>
         fn:json-to-xml('{"\n":1, "\u000A":2}', map{'duplicates':'reject'})
      </test>
        <result>
            <error code="FOJS0003"/>
        </result>
   </test-case>
   



</test-set>