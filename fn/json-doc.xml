<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-json-doc" covers="fn-json-doc">
  <description>json-doc() function introduced in XPath 3.1</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-31/"
    idref="func-json-doc"/>

   <dependency type="spec" value="XP31+ XQ31+"/>

  <environment name="json-files">
      <resource file="json-to-xml/data001.json"
                media-type="text/plain"
                encoding="utf-8"
                uri="http://www.w3.org/qt3/json/data001-json">
         <description>UTF-8 encoded plain text.</description>
         <created by="O'Neil Delpratt" on="2015-02-23"/>
      </resource>
      <resource file="json-to-xml/escapeText.json"
                media-type="text/plain"
                encoding="utf-8"
                uri="http://www.w3.org/qt3/json/escapeText-json">
         <description>UTF-8 encoded plain text.</description>
         <created by="O'Neil Delpratt" on="2015-02-23"/>
      </resource>
      <resource file="json-to-xml/data005.json"
                media-type="text/plain"
                encoding="utf-8"
                uri="http://www.w3.org/qt3/json/data005-json">
         <description>UTF-8 encoded plain text.</description>
         <created by="O'Neil Delpratt" on="2015-02-23"/>
      </resource>
      <namespace prefix="j" uri="http://www.w3.org/2005/xpath-functions/json"/>
   </environment>
   
   <environment name="json-doc-array">
      <resource file="json-doc/arrayEmpty.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/arrayEmpty-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/arrayNumber.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/arrayNumber-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/arrayString.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/arrayString-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/arrayTrue.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/arrayTrue-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>         
      <resource file="json-doc/arrayFalse.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/arrayFalse-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/arrayNull.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/arrayNull-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>      
   </environment>
   
   <environment name="json-doc-map">      
      <resource file="json-doc/mapEmpty.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/mapEmpty-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/mapDuplicates.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/mapDuplicates-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/mapUnescape.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/mapUnescape-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/mapUnescape10.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/mapUnescape10-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/mapUnescapeUnpaired10.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/mapUnescapeUnpaired10-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/mapZeroLength.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/mapZeroLength-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/mapDuplicatesEscape.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/mapDuplicatesEscape-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
   </environment>
   
   <environment name="json-doc-number">
      <resource file="json-doc/number001.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/number001-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/number002.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/number002-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/number003.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/number003-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/number004.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/number004-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
   </environment>
   
   <environment name="json-doc-string">
      <resource file="json-doc/stringUnpaired.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/stringUnpaired-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/stringHex.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/stringHex-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
   </environment>
   
   <environment name="json-doc-error">
      <resource file="json-doc/errorToken.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorToken-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorExtra.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorExtra-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorArray.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorArray-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorArrayNumber.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorArrayNumber-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorArrayHex.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorArrayHex-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorArrayString.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorArrayString-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorArrayUnicode.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorArrayUnicode-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorMap.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorMap-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorArrayComma.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorArrayComma-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorNumber01.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorNumber01-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorNumber02.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorNumber02-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorNumber03.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorNumber03-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorNumber04.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorNumber04-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorString01.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorString01-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorString02.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorString02-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
      <resource file="json-doc/errorString03.json"
         media-type="text/plain"
         encoding="utf-8"
         uri="http://www.w3.org/qt3/json/errorString03-json">
         <created by="Debbie Lockett" on="2015-06-15"/>
      </resource>
   </environment>

   <test-case name="json-doc-001">
      <description>Empty object</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-map"/>      
      <test>fn:json-doc('http://www.w3.org/qt3/json/mapEmpty-json')</test>
      <result>
         <assert-deep-eq>map{}</assert-deep-eq>
      </result>
   </test-case>

   <test-case name="json-doc-002">
      <description>Empty array</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-array"/>      
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayEmpty-json')</test>
      <result>
         <assert-deep-eq>[]</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-003">
      <description>Array containing a number</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-array"/> 
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayNumber-json')</test>
      <result>
         <assert-deep-eq>[1]</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-004">
      <description>Array containing a string</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-array"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayString-json')</test>
      <result>
         <assert-deep-eq>["a"]</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-005">
      <description>Array containing the boolean true</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-array"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayTrue-json')</test>
      <result>
         <assert-deep-eq>[true()]</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-006">
      <description>Array containing the boolean false</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-array"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayFalse-json')</test>
      <result>
         <assert-deep-eq>[false()]</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-007">
      <description>Array containing the empty sequence (null)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-array"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayNull-json')</test>
      <result>
         <assert-deep-eq>[()]</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-008">
      <description>More complex JSON document containing maps</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-files"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/data001-json')</test>
      <result>
         <all-of>
            <assert-count>1</assert-count>
            <assert-type>map(*)</assert-type>
            <assert>count($result?*) eq 1</assert>
            <assert>$result?*?title = "example glossary"</assert>
            <assert>map:size($result?glossary?GlossDiv?GlossList?GlossEntry) eq 7</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="json-doc-009">
      <description>More complex JSON document containing maps and arrays</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-files"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/data005-json')</test>
      <result>
         <all-of>
            <assert-count>1</assert-count>
            <assert-type>map(*)</assert-type>
            <assert>count($result?*) eq 1</assert>
            <assert>$result?menu?header = "SVG Viewer"</assert>
            <assert>array:size($result?menu?items) eq 22</assert>
            <assert>count($result?menu?items?3) eq 0</assert>
            <assert>$result?menu?items?*[?id = "Find"]?label = "Find..."</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="json-doc-010">
      <description>More complex JSON document containing escape character</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-files"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/escapeText-json')?key</test>
      <result>
         <assert-string-value>Data with " within it</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="json-doc-011">
      <description>JSON document containing escape character, using escape options parameter</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <environment ref="json-files"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/escapeText-json', map{'escape':false()})?key</test>
      <result>
         <assert-string-value>Data with " within it</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="json-doc-012">
      <description>JSON document containing escape character, using escape options parameter</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Debbie Lockett" on="2015-08-07" change="Change expected result, quotes not escaped, see bug #28995"/>
      <environment ref="json-files"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/escapeText-json', map{'escape':true()})?key</test>
      <result>
         <assert-string-value>Data with " within it</assert-string-value>
      </result>
   </test-case>  
      
   <test-case name="json-doc-018">
      <description>Duplicate entries in a map: default is use-first</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Josh Spiegel" on="2015-07-01" change="Bug 28771 changes the default for duplicates to use-first"/>
      <environment ref="json-doc-map"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapDuplicates-json')
      </test>
      <result>
         <assert-deep-eq>map{"a":3, "b":4}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-019">
      <description>Not-Unescaped key</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <environment ref="json-doc-map"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapUnescape-json', map{'escape':true()})
      </test>
      <result>
         <assert-deep-eq>map{"a\\":3, "b\\":4}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-020">
      <description>Unescaped key</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <environment ref="json-doc-map"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapUnescape-json', map{'escape':false()})
      </test>
      <result>
         <assert-deep-eq>map{"a\":3, "b\":4}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-021">
      <description>Character invalid in XML 1.0 in a string and a key: escape true</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Debbie Lockett" on="2015-08-07" change="Result change see bug #28996"/>
      <environment ref="json-doc-map"/>
      <dependency type="xml-version" value="1.0"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapUnescape10-json', map{'escape':true()})
      </test>
      <result>
         <assert-deep-eq>map{"a":"\f", "\u0007":"bell"}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-022">
      <description>Character invalid in XML 1.0 in a string and a key: escape false</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <environment ref="json-doc-map"/>
      <dependency type="xml-version" value="1.0"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapUnescape10-json', map{'escape':false()})
      </test>
      <result>
         <assert-deep-eq>map{"a":"&#xFFFD;", "&#xFFFD;":"bell"}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-023">
      <description>Unpaired surrogates: escape false</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-map"/>
      <dependency type="xml-version" value="1.0"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapUnescapeUnpaired10-json', map{'escape':false()})
      </test>
      <result>
         <assert-deep-eq>map{"a":"&#xFFFD;", "&#xFFFD;":"bell"}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-024">
      <description>Unpaired surrogates: escape true</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <environment ref="json-doc-map"/>
      <dependency type="xml-version" value="1.0"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapUnescapeUnpaired10-json', map{'escape':true()})
      </test>
      <result>
         <assert-deep-eq>map{"a":"\uDA00", "\uDD00":"bell"}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-025">
      <description>Character invalid in XML 1.0 in a string and a key: fallback</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <environment ref="json-doc-map"/>
      <dependency type="xml-version" value="1.0"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapUnescape10-json', 
         map{'escape':false(), 'fallback':function($s){'??'}})
      </test>
      <result>
         <assert-deep-eq>map{"a":"??", "??":"bell"}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-026">
      <description>Unpaired surrogates: fallback</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <environment ref="json-doc-map"/>
      <dependency type="xml-version" value="1.0"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapUnescapeUnpaired10-json', 
         map{'escape':false(), 'fallback':function($s){'??' || translate($s, 'abcdef', 'ABCDEF')  || '??'}})
      </test>
      <result>
         <assert-deep-eq>map{"a":"??\uDA00??", "??\uDD00??":"bell"}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-027">
      <description>Unpaired surrogates: escape true, fallback (invalid combination)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape. This case is now an error."/>
      <environment ref="json-doc-map"/>
      <dependency type="xml-version" value="1.0"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapUnescapeUnpaired10-json', 
         map{'escape':true(), 'fallback':function($s){'??' || translate($s, 'abcdef', 'ABCDEF')  || '??'}})
      </test>
      <result>
         <error code="FOJS0005"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-028">
      <description>Supply empty sequence (), with options map</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-doc((), 
         map{'escape':false(), 'fallback':function($s){'??' || translate($s, 'abcdef', 'ABCDEF')  || '??'}})
      </test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="json-doc-029">
      <description>Supply empty options map</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-array"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/arrayNumber-json', map{})
      </test>
      <result>
         <assert-deep-eq>[1]</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-030">
      <description>Exponent with upper-case E. Lexical representation retained.</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-number"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/number001-json')
      </test>
      <result>
         <all-of>
            <assert-deep-eq>23E0</assert-deep-eq>
            <assert>$result instance of xs:double</assert>
         </all-of>         
      </result>
   </test-case>
   
   <test-case name="json-doc-031">
      <description>Exponent with lower-case E and sign; leading zero OK if followed by ".". 
         Lexical representation retained.</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-number"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/number002-json')
      </test>
      <result>
         <all-of>
            <assert-deep-eq>0.23e+02</assert-deep-eq>
            <assert>$result instance of xs:double</assert>
         </all-of>         
      </result>
   </test-case>
   
   <test-case name="json-doc-032">
      <description>Zero is OK</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-number"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/number003-json')
      </test>
      <result>
         <all-of>
            <assert-deep-eq>0</assert-deep-eq>
            <assert>$result instance of xs:double</assert>
         </all-of>         
      </result>
   </test-case>
   
   <test-case name="json-doc-033">
      <description>Negative zero is OK</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-number"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/number004-json')
      </test>
      <result>
         <all-of>
            <assert-deep-eq>-0</assert-deep-eq>
            <assert>$result instance of xs:double</assert>
         </all-of>         
      </result>
   </test-case>
   
   <test-case name="json-doc-034">
      <description>Zero-length keys and values are OK</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-map"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapZeroLength-json')
      </test>
      <result>
         <assert-deep-eq>map{"":"", "0":"0"}</assert-deep-eq>         
      </result>
   </test-case>
   
   <test-case name="json-doc-035">
      <description>Supply empty sequence ()</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <test>fn:json-doc(())</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="json-doc-036">
      <description>Duplicate entries in a map: duplicates options parameter use-first</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-map"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapDuplicates-json', map{'duplicates':'use-first'})
      </test>
      <result>
         <assert-deep-eq>map{"a":3, "b":4}</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-039">
      <description>Unpaired surrogate, fallback</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-string"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/stringUnpaired-json', map{'fallback':function($s){substring($s, 3)}})
      </test>
      <result>
         <assert-string-value>oh dear DEAD</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="json-doc-042">
      <description>Duplicates after escaping</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Debbie Lockett" on="2015-08-07" change="Result change (plus description edit), see bug #28998"/>
      <environment ref="json-doc-map"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapDuplicatesEscape-json', map{'escape':true(), 'duplicates':'reject'})
      </test>
      <result>
         <error code="FOJS0003"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-043">
      <description>Lower case hex digits are allowed</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-string"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/stringHex-json')
      </test>
      <result>
         <assert-string-value>\</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="json-doc-044">
      <description>Ignore validate option parameter</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-array"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayNumber-json', map{'validate':true()})</test>
      <result>
         <assert-deep-eq>[1]</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-001">
      <description>Empty string</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Debbie Lockett" on="2015-08-04" change="Added the error code FOUT1170, for bug 28837." />
      <test>fn:json-doc('')</test>
      <result>
         <any-of>
            <error code="FOJS0001"/>
            <error code="FOUT1170"/>
         </any-of>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-002">
      <description>Invalid JSON input, unknown token</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="O'Neil Delpratt" on="2015-07-30" change="see bug issue 28837. Added the error code FOUT1170" />
      <modified by="Debbie Lockett" on="2015-08-04" change="Revert error code change, mistakenly made for this test but intended for json-doc-error-001." />
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorToken-json')</test>
      <result>
         <error code="FOJS0001"/>                     
      </result>
   </test-case>
   
   <test-case name="json-doc-error-003">
      <description>Invalid JSON input, extra token</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorExtra-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-004">
      <description>Invalid JSON input, array content (leading + on the number)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorArray-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-005">
      <description>Invalid JSON input, array content (redundant leading 0 on number)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorArrayNumber-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-006">
      <description>Invalid JSON input, array content (redundant leading 0 on number)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorArrayHex-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-007">
      <description>Invalid JSON input, array content (trailing backslash)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorArrayString-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-008">
      <description>Invalid JSON input, array content (short unicode)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorArrayUnicode-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-009">
      <description>Invalid JSON input, map content (trailing comma)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorMap-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-010">
      <description>Invalid JSON input, map content (trailing comma), option liberal false</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorMap-json', map{"liberal":false()})</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-011">
      <description>Invalid JSON input, array content (trailing comma)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorArrayComma-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-012">
      <description>Option liberal type error</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-doc-array"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayNumber-json', map{'liberal':()})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-013">
      <description>Option escape type error</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-doc-array"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayNumber-json', map{'escape':()})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-014">
      <description>Option escape type error</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-doc-array"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayNumber-json', map{'escape':(true(),true())})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-015">
      <description>Option escape type error</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Michael Kay" on="2015-07-17" change="Change keyword unescape->escape"/>
      <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-doc-array"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayNumber-json', map{'escape':'EMCA-262'})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-016">
      <description>Option fallback type error</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-doc-array"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/arrayNumber-json', map{'fallback':'dummy'})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-017">
      <description>Invalid JSON input, array content (leading decimal point not allowed)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorNumber01-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-018">
      <description>Invalid JSON input, array content (trailing decimal point not allowed)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorNumber02-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-019">
      <description>Invalid JSON input, array content (trailing decimal point not allowed)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorNumber03-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-020">
      <description>Invalid JSON input, array content (leading decimal point not allowed)</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>fn:json-doc('http://www.w3.org/qt3/json/errorNumber04-json')</test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-021">
      <description>Duplicate entries in a map: duplicates options parameter reject</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-map"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapDuplicates-json', map{'duplicates':'reject'})
      </test>
      <result>
         <error code="FOJS0003"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-022">
      <description>Duplicate entries in a map: duplicates options parameter retain invalid</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-map"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapDuplicates-json', map{'duplicates':'retain'})
      </test>
      <result>
         <error code="FOJS0005"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-023">
      <description>Invalid JSON input, backslash at end of string</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/errorString01-json')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-024">
      <description>Invalid JSON input, insufficient characters after \u</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/errorString02-json')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-025">
      <description>Invalid JSON input, invalid character after \</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-error"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/errorString03-json')
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-026">
      <description>Fallback function with wrong arity</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <modified by="Debbie Lockett" on="2015-08-04" change="Error code change for bug 28994"/>
      <environment ref="json-doc-array"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/arrayNumber-json', map{'fallback':concat#2})
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="json-doc-error-027">
      <description>Duplicates after unescaping</description>
      <created by="Debbie Lockett" on="2015-06-15"/>
      <environment ref="json-doc-map"/>
      <test>
         fn:json-doc('http://www.w3.org/qt3/json/mapDuplicatesEscape-json', map{'duplicates':'reject'})
      </test>
      <result>
         <error code="FOJS0003"/>
      </result>
   </test-case>
   
  <test-case name="json-doc-error-028">
      <description>

         "The function may raise any error defined for the
         fn:unparsed-text or fn:parse-json functions."

         "A dynamic error is raised [err:FOUT1170] if $href contains a
         fragment identifier, or if it cannot be resolved to an
         absolute URI (for example, because the base-URI property in
         the static context is absent), or if it cannot be used to
         retrieve the string representation of a resource."

         Derived from fn-unparsed-text-013

      </description>
      <created by="Josh Spiegel" on="2015-07-01"/>
      <test>fn:json-doc("http://www.example.org/#fragment")</test>
      <result>
         <error code="FOUT1170" />
      </result>
   </test-case>

   <test-case name="json-doc-error-029">
      <description>

         "The function may raise any error defined for the
         fn:unparsed-text or fn:parse-json functions."

         Derived from fn-unparsed-text-015

      </description>
      <created by="Josh Spiegel" on="2015-07-01"/>
      <test>fn:json-doc("http://www.example.org/%gg")</test>
      <result>
         <error code="FOUT1170" />
      </result>
   </test-case>
   
   <test-case name="json-doc-error-030">
      <description>

         "The function may raise any error defined for the
         fn:unparsed-text or fn:parse-json functions."

         Derived from fn-unparsed-text-019

      </description>
      <created by="Josh Spiegel" on="2015-07-01"/>
      <test>fn:json-doc("http://www.w3.org/fots/unparsed-text/does-not-exist.txt")</test>
      <result>
         <error code="FOUT1170" />
      </result>
   </test-case>

   <test-case name="json-doc-error-031">
      <description>

         "The function may raise any error defined for the
         fn:unparsed-text or fn:parse-json functions."

         Derived from fn-unparsed-text-023
 
      </description>
      <created by="Josh Spiegel" on="2015-07-01"/>
      <environment>
             <static-base-uri uri="#UNDEFINED" />
      </environment>
      <test>fn:json-doc("unparsed-text/text-plain-utf-8.txt")</test>
      <result>
         <error code="FOUT1170"/>
      </result>
   </test-case>

   <test-case name="json-doc-error-032">
      <description>

         "The function may raise any error defined for the
         fn:unparsed-text or fn:parse-json functions."

         Derived from fn-unparsed-text-025

      </description>
      <created by="Josh Spiegel" on="2015-07-01"/>
      <environment>
         <static-base-uri uri="http://www.w3.org/fots/unparsed-text/" />
      </environment>
      <test>fn:json-doc("does-not-exist.txt")</test>
      <result>
             <error code="FOUT1170" />
      </result>
   </test-case>

</test-set>
