<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-load-xquery-module" covers="fn-load-xquery-module">
  <description>Tests for the fn:load-xquery-module() function introduced in XPath 3.1</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-31/"
    idref="func-load-xquery-module"/>

  <dependency type="spec" value="XP31+ XQ31+"/>
  <dependency type="feature" value="fn-load-xquery-module" satisfied="true"/>  
  <dependency type="feature" value="higherOrderFunctions"/>  

  <environment name="hats" >
    <schema uri="http://www.w3.org/XQueryTest/hats" file="../prod/SchemaImport/hats.xsd">
      <description>A schema defining a motley collection of types.</description>
      <created by="Michael Kay" on="2006-11-14"/>
    </schema>
  </environment> 
  <environment name="abf" >
    <schema uri="http://www.w3.org/XQueryTest/abf" file="../prod/SchemaImport/abf.xsd">
      <description>A schema defining a complex type abf.</description>
      <created by="Michael Kay" on="2006-11-14"/>
    </schema>
  </environment>

  <test-case name="fn-load-xquery-module-001">
    <description>Checks for an error when calling fn:load-xquery-module without a module-uri.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <test>fn:load-xquery-module("")</test>
    <result>
      <error code="FOQM0001"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-002">
    <description>Checks for an error when calling fn:load-xquery-module without a module-uri.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <test>fn:load-xquery-module("", map{})</test>
    <result>
      <error code="FOQM0001"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-003">
    <description>Checks for an error when calling fn:load-xquery-module and the module-uri cannot be resolved.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <test>fn:load-xquery-module("http://nonexistent/module")</test>
    <result>
      <error code="FOQM0002"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-004">
    <description>Checks for an error when calling fn:load-xquery-module and the module-uri cannot be resolved.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <test>fn:load-xquery-module("http://nonexistent/module", map{})</test>
    <result>
      <error code="FOQM0002"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-005">
    <description>Checks for an error when calling fn:load-xquery-module against an invalid module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/invalid/module" file="load-xquery-module/invalid-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/invalid/module")</test>
    <result>
      <error code="FOQM0003"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-006">
    <description>Checks for an error when calling fn:load-xquery-module against an invalid module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/invalid/module" file="load-xquery-module/invalid-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/invalid/module", map{})</test>
    <result>
      <error code="FOQM0003"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-007">
    <description>Checks for an error when calling fn:load-xquery-module and not providing a value for an external var in the module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <modified by="TIm Mills" on="2016-10-19" change="See Bug 29930"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-var/module" file="load-xquery-module/external-var-module.xqm"/>
    <test>let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/external-var/module",
              $module := fn:load-xquery-module($module-ns)
          return $module("variables")(QName($module-ns,'var1'))</test>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-008">
    <description>Checks for an error when calling fn:load-xquery-module and not providing a value for an external var in the module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <modified by="TIm Mills" on="2016-10-19" change="See Bug 29930"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-var/module" file="load-xquery-module/external-var-module.xqm"/>
    <test>let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/external-var/module",
              $module := fn:load-xquery-module($module-ns, map{})
          return $module("variables")(QName($module-ns,'var1'))</test>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-009">
    <description>Checks for an error when calling fn:load-xquery-module and not providing a context item for the module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <modified by="TIm Mills" on="2016-10-19" change="See Bug 29930"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/context-item/module" file="load-xquery-module/context-item-module.xqm"/>
    <test>let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/context-item/module", $module := fn:load-xquery-module($module-ns)
          return $module("variables")(QName($module-ns,'context'))</test>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-010">
    <description>Checks for an error when calling fn:load-xquery-module and not providing a context item for the module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/context-item/module" file="load-xquery-module/context-item-module.xqm"/>
    <test>let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/context-item/module", $module := fn:load-xquery-module($module-ns, map{})
          return $module("variables")(QName($module-ns,'context'))</test>
    <result>
      <error code="XPDY0002"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-011">
    <description>Checks for an error when calling fn:load-xquery-module and providing the wrong type of value for an external var in the module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-var/module" file="load-xquery-module/external-var-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/external-var/module", map {"variables" : map { QName("http://www.w3.org/fots/fn/load-xquery-module/external-var/module", "var1") : 1234 }})</test>
    <result>
      <error code="FOQM0005"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-012">
    <description>Checks that a dynamic error caused when fn:load-xquery-module processes a module is returned as is.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <modified by="Michael Kay" on="2015-07-13" change="Mixing timezones is no longer an error; added new dynamic error"/>
    <modified by="Tim Mills" on="2016-10-21" change="See Bug 29936"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/dynamic-error/module" file="load-xquery-module/dynamic-error-module.xqm"/>
    <test>
      let $module-ns :="http://www.w3.org/fots/fn/load-xquery-module/dynamic-error/module", $module := fn:load-xquery-module($module-ns)
      return $module('variables')(QName($module-ns, "cause-dynamic-error"))        </test>
    <result>
      <error code="FOAR0001"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-013">
    <description>Checks that a dynamic error caused when fn:load-xquery-module processes a module is returned as is.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <modified by="Michael Kay" on="2015-07-13" change="Mixing timezones is no longer an error; added new dynamic error"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/dynamic-error/module" file="load-xquery-module/dynamic-error-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/dynamic-error/module", map{})</test>
    <result>
      <error code="FOAR0001"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-014">
    <description>Loads a module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element, fix test typos"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns)
      return
        let $vars := $module("variables"),
         $fns := $module("functions")
        return
          let $var-values := ($vars(QName($module-ns, "var1")), $vars(QName($module-ns, "var2"))),
           $fns-values := ($fns(QName($module-ns, "func1"))(0)(), $fns(QName($module-ns, "func2"))(0)())
          return
            ($var-values, $fns-values)
    </test>
    <result>
      <assert-deep-eq>("var1", "var2", "func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-015">
    <description>Loads a module and sets the value for an external var in the module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-var/module" file="load-xquery-module/external-var-module.xqm"/>
    <test>
      let $qn-var1 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-var/module", "var1"),
       $test-value := "some value"
      return
        let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/external-var/module", map {"variables" : map { $qn-var1 : $test-value }})
        return
          $module("variables")($qn-var1)
    </test>
    <result>
      <assert-string-value>some value</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-016">
    <description>Loads a module and sets the context item for the module.</description>
    <created by="Adam Retter" on="2015-02-01"/>
    <modified by="Debbie Lockett" on="2015-05-11" change="Added module element and spec dependency, fix test typo"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/context-item/module" file="load-xquery-module/context-item-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <test><![CDATA[
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/context-item/module", map{"context-item" : <a><b>hello</b></a>})
      return
        let $f := $module("functions")(QName("http://www.w3.org/fots/fn/load-xquery-module/context-item/module", "get-context-child"))(0)
        return
          $f()
    ]]></test>
    <result>
      <assert-xml><![CDATA[<b>hello</b>]]></assert-xml>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-017">
    <description>Loads a module and sets the context item used by a variable.</description>
    <created by="Debbie Lockett" on="2015-05-13"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/context-item/module" file="load-xquery-module/context-item-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <test><![CDATA[
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/context-item/module", map{"context-item" : <a><b>hello</b></a>})
      return
        $module("variables")(QName("http://www.w3.org/fots/fn/load-xquery-module/context-item/module", "context"))        
    ]]></test>
    <result>
      <assert-xml><![CDATA[<a><b>hello</b></a>]]></assert-xml>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-018">
    <description>Loads a module containing functions, but no variables.</description>
    <created by="Debbie Lockett" on="2015-05-13"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/functions/module" file="load-xquery-module/functions-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/functions/module",
       $module := fn:load-xquery-module($module-ns)
      return
      let $fns := $module("functions")
      return
      let $fns-values := ($fns(QName($module-ns, "func1"))(0)(), $fns(QName($module-ns, "func2"))(0)())
      return
      $fns-values
    </test>
    <result>
      <assert-deep-eq>("func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-019">
    <description>Loads a module containing functions, including functions with same name but different arities.</description>
    <created by="Debbie Lockett" on="2015-05-13"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/functions/module" file="load-xquery-module/functions2-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/functions/module",
       $module := fn:load-xquery-module($module-ns)
      return
      let $fns := $module("functions")
      return
      let $fns-values := ($fns(QName($module-ns, "func1"))(0)(), $fns(QName($module-ns, "func1"))(1)("something"), $fns(QName($module-ns, "func2"))(0)(), $fns(QName($module-ns, "func2"))(1)("something"))
      return
      $fns-values
    </test>
    <result>
      <assert-deep-eq>("func1", "func1something", "func2", "something")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-020">
    <description>Loads a module and sets the values for external variables in the module.</description>
    <created by="Debbie Lockett" on="2015-05-14"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module" file="load-xquery-module/external-vars-module.xqm"/>
    <test>
      let $qn-var1 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", "var1"),
       $qn-var2 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", "var2"),
       $qn-var3 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", "var3")
      return
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", 
      map {"variables" : map { $qn-var1 : "some value", $qn-var2 : 42, $qn-var3 : map{"a":1,"b":2,"c":(3,4,5)} }})
      return
      ($module("variables")($qn-var1), $module("variables")($qn-var2), $module("variables")($qn-var3)("b"))
    </test>
    <result>
      <assert-deep-eq>("some value", 42, 2)</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-021">
    <description>Loads a module and sets the values of its variables only if they are external.</description>
    <created by="Debbie Lockett" on="2015-05-14"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module" file="load-xquery-module/external-vars-module.xqm"/>
    <test>      
      let $qn-var1 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", "var1"),
       $qn-var2 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", "var2"),
       $qn-var3 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", "var3"),
       $qn-var4 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", "var4")
      return
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", 
      map {"variables" : map { $qn-var2 : 42, $qn-var3 : map{"a":1,"b":2,"c":(3,4,5)}, $qn-var4 : "the other" }})
      return
      ($module("variables")($qn-var1), $module("variables")($qn-var2), $module("variables")($qn-var3)("b"), $module("variables")($qn-var4))
    </test>
    <result>
      <assert-deep-eq>("this", 42, 2, "that")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-022">
    <description>Global functions from a module imported by the loaded module are not included in the result of load-xquery-module().</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-func/module" file="load-xquery-module/import-func-module.xqm"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>
    <test>
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/import-func/module")
      return
      $module("functions")(QName("http://www.w3.org/fots/fn/load-xquery-module/valid/module", "func1"))
    </test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-023">
    <description>Global functions from a module imported by the loaded module are not included in the result of load-xquery-module().</description>
    <created by="Debbie Lockett" on="2015-05-18"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import/module" file="load-xquery-module/import-module.xqm"/>
    <module uri="http://www.w3.org/TestModules/module1" file="../prod/ModuleImport/module1-lib.xq"/>
    <module uri="http://www.w3.org/TestModules/module2" file="../prod/ModuleImport/module2-lib.xq"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import/module",
       $module := fn:load-xquery-module($module-ns),
       $mod1-ns := "http://www.w3.org/TestModules/module1"
      return
      let $fns := $module("functions")
      return $fns(QName($mod1-ns, "x"))(0)()
    </test>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-024"> 
    <description>Global functions from a module imported by the loaded module are not included in the result of load-xquery-module().</description>
    <created by="Debbie Lockett" on="2015-05-18"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import/module" file="load-xquery-module/import-module.xqm"/>
    <module uri="http://www.w3.org/TestModules/module1" file="../prod/ModuleImport/module1-lib.xq"/>
    <module uri="http://www.w3.org/TestModules/module2" file="../prod/ModuleImport/module2-lib.xq"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import/module",
       $module := fn:load-xquery-module($module-ns),
       $mod1-ns := "http://www.w3.org/TestModules/module1",
       $mod2-ns := "http://www.w3.org/TestModules/module2"
      return
      let $fns := $module("functions")
      return $fns(QName($mod2-ns, "y"))(0)()
    </test>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-025">
    <description>Global variables from a module imported by the loaded module are not included in the result of load-xquery-module(). </description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-vars/module" file="load-xquery-module/import-vars-module.xqm"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>
    <test>
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/import-vars/module")
      return
      $module("variables")(QName("http://www.w3.org/fots/fn/load-xquery-module/valid/module", "var1"))
    </test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-026">
    <description>Loads a module, supplies value for external variable declared in transitively-imported library module,
      which is used in variable in main module.</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-vars/module" file="load-xquery-module/import-vars2-module.xqm"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module" file="load-xquery-module/external-vars2-module.xqm"/>
    <test>      
      let $qn-var1 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", "var1")
      return
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/import-vars/module", 
      map {"variables" : map { $qn-var1 : "that" }})
      return
      $module("variables")(QName("http://www.w3.org/fots/fn/load-xquery-module/import-vars/module", "var1"))
    </test>
    <result>
      <assert-string-value>that</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-027">
    <description>Loads a module, supplies value for external variable declared in indirectly imported module,
      which is used in variable in main module.</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import/module" file="load-xquery-module/import2-module.xqm"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/middle/module" file="load-xquery-module/middle-module.xqm"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module" file="load-xquery-module/external-vars2-module.xqm"/>
    <test>      
      let $qn-var1 := QName("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", "var1")
      return
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/import/module", 
      map {"variables" : map { $qn-var1 : "that" }})
      return
      $module("variables")(QName("http://www.w3.org/fots/fn/load-xquery-module/import/module", "var1"))
    </test>
    <result>
      <assert-string-value>that</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-028">
    <description>Loads a module containing a function using variables from an imported module.</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-vars/module" file="load-xquery-module/import-vars3-module.xqm"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module" file="load-xquery-module/external-vars-module.xqm"/>
    <test>      
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import-vars/module",
       $module-ext := "http://www.w3.org/fots/fn/load-xquery-module/external-vars/module"
      return
      let $module := fn:load-xquery-module($module-ns, 
      map {"variables" : map {QName($module-ext, "var3") : map{}}})
      return
      $module("functions")(QName($module-ns, "and"))(0)()
    </test>
    <result>
      <assert-string-value>this and that</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-029">
    <description>Error loading a module which attempts to import itself directly</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <modified by="Michael Kay" on="2015-07-14" change="Not an error. XQ 4.12.4 Cycles: implementations must resolve cycles..."/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-self/module" file="load-xquery-module/import-self-module.xqm"/>
    <test>      
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/import-self/module")
      return
      $module("variables")(QName("http://www.w3.org/fots/fn/load-xquery-module/import-self/module", "var1"))
    </test>
    <result>
      <assert-string-value>this</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-030">
    <description>Loads a module which imports itself circularly.</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <modified by="Michael Kay" on="2015-07-13" change="make the test query actually call the function"/>
    <module uri="http://www.w3.org/TestModules/test1" file="../prod/ModuleImport/test1c1-lib.xq"/>
    <module uri="http://www.w3.org/TestModules/test2" file="../prod/ModuleImport/test2c1-lib.xq"/>
    <test>      
      let $module := fn:load-xquery-module("http://www.w3.org/TestModules/test1")
      return
      $module("functions")(QName("http://www.w3.org/TestModules/test1", "ok"))(0)()
    </test>
    <result>
      <assert-string-value>ok</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-031">
    <description>Loads a module which is also statically imported.</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <test>
        import module namespace vm="http://www.w3.org/fots/fn/load-xquery-module/valid/module"; 
        let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module"
        let $module := fn:load-xquery-module($module-ns)
        return 
        ($module("functions")(QName($module-ns, "func1"))(0)(), vm:func2())
    </test>
    <result>
      <assert-deep-eq>("func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-032">
    <description>Loads a module containing external variables, which is also statically imported.</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module" file="load-xquery-module/external-vars-module.xqm"/>
    <environment>
      <param name="evm:var3"
        xmlns:evm="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module"
        select="map{}"
        declared="true"/>
    </environment>
    <dependency type="spec" value="XQ31+"/>
    <test>
        import module namespace evm="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module"; 
        let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/external-vars/module"
        let $module := fn:load-xquery-module($module-ns, 
        map {"variables" : map {QName($module-ns, "var1") : "that", QName($module-ns, "var3") : map{1:'b'}}})
        return
        ($module("functions")(QName($module-ns, "get-var1"))(0)(), evm:get-var1(),
        $module("variables")(QName($module-ns, "var3"))?1, $evm:var3(1) )
      </test>
    <result>
      <assert-deep-eq>("that", "this", "b", ())</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-033">
    <description>Loads a module twice, setting external variables with different values.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module" file="load-xquery-module/external-vars-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/external-vars/module",
       $qn-var1 := QName($module-ns, "var1"),
       $qn-var2 := QName($module-ns, "var2"),
       $qn-var3 := QName($module-ns, "var3")
      return
      let $module1 := fn:load-xquery-module($module-ns, 
      map {"variables" : map { $qn-var1 : "some value", $qn-var2 : 42, $qn-var3 : map{"a":1,"b":2,"c":(3,4,5)} }}),
       $module2 := fn:load-xquery-module($module-ns, 
      map {"variables" : map { $qn-var1 : "another value", $qn-var3 : map{"a":14,"b":"different"} }})
      return
      ($module1("variables")($qn-var1), $module1("variables")($qn-var2), $module1("variables")($qn-var3)("b"),
      $module1("functions")(QName($module-ns, "get-var1"))(0)(), $module1("functions")(QName($module-ns, "get-var2"))(0)(),
      $module2("variables")($qn-var1), $module2("variables")($qn-var2), $module2("variables")($qn-var3)("b"),
      $module2("functions")(QName($module-ns, "get-var1"))(0)(), $module2("functions")(QName($module-ns, "get-var2"))(0)())
    </test>
    <result>
      <assert-deep-eq>("some value", 42, 2, "some value", 42, "another value", 11, "different", "another value", 11)</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-034">
    <description>Loads a module and sets an external variable to be the result of another load-xquery-module call
      for the same module.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-vars/module" file="load-xquery-module/external-vars-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/external-vars/module",
       $qn-var1 := QName($module-ns, "var1"),
       $qn-var2 := QName($module-ns, "var2"),
       $qn-var3 := QName($module-ns, "var3")
      return
      let $module := fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", 
      map {"variables" : map { $qn-var1 : "some value", $qn-var2 : 42, $qn-var3 : 
      fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/external-vars/module", 
      map {"variables" : map { $qn-var1 : "  a string", $qn-var3 : map{} }})
      }})
      return
      ($module("variables")($qn-var1), $module("variables")($qn-var2), 
      $module("variables")($qn-var3)("functions")(QName($module-ns, "get-var1"))(0)(),
      $module("variables")($qn-var3)("functions")(QName($module-ns, "get-var2"))(0)()
      )
    </test>
    <result>
      <assert-deep-eq>("some value", 42, "  a string", 11)</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-035">
    <description>Loads a module which itself loads a module.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/load/module" file="load-xquery-module/load-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/load/module",
       $module-valid-ns := "http://www.w3.org/fots/fn/load-xquery-module/load/module",
       $module := fn:load-xquery-module($module-ns)
      return 
      $module("variables")(QName($module-ns, "var3"))("variables")
    </test>
    <result>
      <assert-type>map(*)</assert-type>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-036">
    <description>Loads a module which itself loads a module.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/load/module" file="load-xquery-module/load-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/load/module",
       $module-valid-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns)
      return 
      ($module("functions")(QName($module-ns, "get-var1"))(0)(), 
      $module("variables")(QName($module-ns, "var1")), 
      $module("variables")(QName($module-ns, "var3"))("variables")(QName($module-valid-ns, "var1")),
      $module("variables")(QName($module-ns, "var3"))("functions")(QName($module-valid-ns, "func1"))(0)())
    </test>
    <result>
      <assert-deep-eq>("this", "this", "var1", "func1")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-037">
    <description>Loads a module which loads itself.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/load-self/module" file="load-xquery-module/load-self-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/load-self/module",
       $module := fn:load-xquery-module($module-ns, 
      map {"variables" : map { QName($module-ns, "b") : true()}})
      return 
      $module("variables")(QName($module-ns, "var1"))("variables")(QName($module-ns, "var1"))
    </test>
    <result>
      <assert-string-value>end</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-038">
    <description>Import a module which loads itself.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/load-self/module" file="load-xquery-module/load-self-module.xqm"/>
    <environment>
      <param name="test:b"
        xmlns:test="http://www.w3.org/fots/fn/load-xquery-module/load-self/module"
        select="true()"
        declared="true"/>
    </environment>
    <dependency type="spec" value="XQ31+"/>
    <test>
      import module namespace test="http://www.w3.org/fots/fn/load-xquery-module/load-self/module";  
      ($test:b, 
      ($test:var1)("variables")(QName("http://www.w3.org/fots/fn/load-xquery-module/load-self/module", "b")),
      ($test:var1)("variables")(QName("http://www.w3.org/fots/fn/load-xquery-module/load-self/module", "var1")))
    </test>
    <result>
      <assert-deep-eq>(true(), false(), "end")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-040">
    <description>Loads a module that defines a decimal format, with a function that calls format-number() using
      the decimal format.</description>
    <created by="Debbie Lockett" on="2015-05-29"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/decimal-format/module" file="load-xquery-module/decimal-format-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/decimal-format/module",
       $module := fn:load-xquery-module($module-ns)
      return
      let $fns := $module("functions")
      return
      $fns(QName($module-ns, "func"))(1)(1234567.765)
    </test>
    <result>
      <assert-string-value>1.234.567,76</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-041">
    <description>Loads a module containing a function which uses "declare default order empty least"</description>
    <created by="Debbie Lockett" on="2015-05-29"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/functions/module" file="load-xquery-module/empty-least-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/functions/module"
      return
      fn:load-xquery-module($module-ns)("functions")(QName($module-ns, "func"))(1)((1,2,3))
    </test>
    <result>
      <assert-string-value>0 0 1 1 1</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-042">
    <description>Loads a module containing a function which uses "declare default order empty greatest"</description>
    <created by="Debbie Lockett" on="2015-05-29"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/functions/module" file="load-xquery-module/empty-greatest-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/functions/module"      
      return
      fn:load-xquery-module($module-ns)("functions")(QName($module-ns, "func"))(1)((1,2,3))
    </test>
    <result>
      <assert-string-value>1 1 1 0 0</assert-string-value>
    </result>
  </test-case> 
  
  <test-case name="fn-load-xquery-module-043">
    <description>Loads a module containing a function which uses "declare default order empty least", 
      while main module contains a function which uses "declare default order empty greatest"</description>
    <created by="Debbie Lockett" on="2015-05-29"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/functions/module" file="load-xquery-module/empty-least-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <test>
      declare default order empty greatest;
      declare namespace test = "http://www.w3.org/fots/fn/load-xquery-module/test";
      declare function test:func($seq as item()*) {
      for $i in 1 to 5
      let $x := subsequence($seq, $i, 1)
      order by $x
      return count($x)
      };
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/functions/module"
      return
      (fn:load-xquery-module($module-ns)("functions")(QName($module-ns, "func"))(1)((1,2,3)), test:func((1,2,3)))
    </test>
    <result>
      <assert-string-value>0 0 1 1 1 1 1 1 0 0</assert-string-value>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-044">
    <description>Loads a module containing a function which uses "declare default order empty greatest", 
      while main module contains a function which uses "declare default order empty least"</description>
    <created by="Debbie Lockett" on="2015-05-29"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/functions/module" file="load-xquery-module/empty-greatest-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <test>
      declare default order empty least;
      declare namespace test = "http://www.w3.org/fots/fn/load-xquery-module/test";
      declare function test:func($seq as item()*) {
      for $i in 1 to 5
      let $x := subsequence($seq, $i, 1)
      order by $x
      return count($x)
      };
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/functions/module"      
      return
      (fn:load-xquery-module($module-ns)("functions")(QName($module-ns, "func"))(1)((1,2,3)), test:func((1,2,3)))
    </test>
    <result>
      <assert-string-value>1 1 1 0 0 0 0 1 1 1</assert-string-value>
    </result>
  </test-case> 
  
  <test-case name="fn-load-xquery-module-045">
    <description>Loads a module containing a function which uses "declare boundary-space strip"</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/functions/module" file="load-xquery-module/boundary-space1-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/functions/module"
      return
      fn:load-xquery-module($module-ns)("functions")(QName($module-ns, "func"))(1)("abc")
    </test>
    <result>
      <assert-xml><![CDATA[<a>abc</a>]]></assert-xml>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-046">
    <description>Loads a module containing a function which uses "declare boundary-space preserve"</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/functions/module" file="load-xquery-module/boundary-space2-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/functions/module"
      return
      fn:load-xquery-module($module-ns)("functions")(QName($module-ns, "func"))(1)("abc")
    </test>
    <result>
      <assert-xml><![CDATA[<a>  abc  </a>]]></assert-xml>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-050">
    <description>Loads a module that imports a schema.</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <environment ref="hats"/>      
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-schema/module" file="load-xquery-module/import-schema-hats-module.xqm"/>
    <dependency type="feature" value="schemaImport"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import-schema/module",
       $module := fn:load-xquery-module($module-ns)
      return
      $module("functions")(QName($module-ns, "hatsize"))(1)(8)
    </test>
    <result>
      <assert-xml><![CDATA[<a>8</a>]]></assert-xml>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-051">
    <description>Loads a module that imports a schema.</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <environment ref="abf"/> 
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-schema/module" file="load-xquery-module/import-schema-abf-module.xqm"/>
    <dependency type="feature" value="schemaImport"/> 
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import-schema/module",
       $module := fn:load-xquery-module($module-ns)
      return
      $module("functions")(QName($module-ns, "validate-ok"))(0)()
    </test>
    <result>
      <assert-xml><![CDATA[<abf xmlns="http://www.w3.org/XQueryTest/abf"><a/><b/><f/></abf>]]></assert-xml>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-052">
    <description>Loads a module that imports a schema.</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <environment ref="abf"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-schema/module" file="load-xquery-module/import-schema-abf-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <dependency type="feature" value="schemaImport"/> 
    <test><![CDATA[ 
      declare default element namespace "http://www.w3.org/XQueryTest/abf";
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import-schema/module"
      let $module := fn:load-xquery-module($module-ns)
      let $c := (<a/>,<b/>,<f/>)
      return
      $module("functions")(QName($module-ns, "validate"))(1)($c)
      ]]>      
    </test>
    <result>
      <assert-xml><![CDATA[<abf xmlns="http://www.w3.org/XQueryTest/abf"><a/><b/><f/></abf>]]></assert-xml>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-053">
    <description>Loads a module that imports a schema, checks for an error for an invalid element.</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <environment ref="abf"/> 
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-schema/module" file="load-xquery-module/import-schema-abf-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <dependency type="feature" value="schemaImport"/> 
    <test><![CDATA[ 
      declare default element namespace "http://www.w3.org/XQueryTest/abf";
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import-schema/module"
      let $module := fn:load-xquery-module($module-ns)
      let $c := (<a/>,<b/>,<c/>,<f/>)
      return
      $module("functions")(QName($module-ns, "validate"))(1)($c)
      ]]>      
    </test>
    <result>
      <error code="XQDY0027"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-054">
    <description>Loads a module that imports a schema, which is also imported directly.</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <environment ref="abf"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-schema/module" file="load-xquery-module/import-schema-abf-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <dependency type="feature" value="schemaImport"/> 
    <test><![CDATA[ 
      import schema default element namespace "http://www.w3.org/XQueryTest/abf";
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import-schema/module"
      let $module := fn:load-xquery-module($module-ns)
      let $c := (<a/>,<b/>,<f/>)
      return
      validate strict {$module("functions")(QName($module-ns, "abf"))(1)($c)}
      ]]>      
    </test>
    <result>
      <assert-xml><![CDATA[<abf xmlns="http://www.w3.org/XQueryTest/abf"><a/><b/><f/></abf>]]></assert-xml>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-055">
    <description>Loads a module that imports a schema, which is also imported directly, 
      checks for an error for an invalid element.</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <environment ref="abf"/> 
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-schema/module" file="load-xquery-module/import-schema-abf-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <dependency type="feature" value="schemaImport"/> 
    <test><![CDATA[ 
      import schema default element namespace "http://www.w3.org/XQueryTest/abf";
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import-schema/module"
      let $module := fn:load-xquery-module($module-ns)
      let $c := (<a/>,<b/>,<c/>,<f/>)
      return
      validate strict {$module("functions")(QName($module-ns, "abf"))(1)($c)}
      ]]>      
    </test>
    <result>
      <error code="XQDY0027"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-056">
    <description>Loads a module that imports a schema, and uses an external variable.</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <environment ref="abf"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-schema/module" file="load-xquery-module/import-schema-abf2-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <dependency type="feature" value="schemaImport"/> 
    <test><![CDATA[
      declare default element namespace "http://www.w3.org/XQueryTest/abf";
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import-schema/module"
      let $module := fn:load-xquery-module($module-ns, 
      map {"variables" : map {QName($module-ns, "c") : <outer><a/><b/><f/></outer>}})
      return
      $module("functions")(QName($module-ns, "validate"))(0)()
      ]]>      
    </test>
    <result>
      <assert-xml><![CDATA[<abf xmlns="http://www.w3.org/XQueryTest/abf"><a/><b/><f/></abf>]]></assert-xml>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-057">
    <description>Loads a module that imports a schema, and uses an external variable, 
      checks for an error for an invalid element.</description>
    <created by="Debbie Lockett" on="2015-06-02"/>
    <environment ref="abf"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/import-schema/module" file="load-xquery-module/import-schema-abf2-module.xqm"/>
    <dependency type="spec" value="XQ31+"/>
    <dependency type="feature" value="schemaImport"/> 
    <test><![CDATA[
      declare default element namespace "http://www.w3.org/XQueryTest/abf";
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/import-schema/module"
      let $module := fn:load-xquery-module($module-ns, 
      map {"variables" : map {QName($module-ns, "c") : <outer><a/><b/><d/><f/></outer>}})
      return
      $module("functions")(QName($module-ns, "validate"))(0)()
      ]]>      
    </test>
    <result>
      <error code="XQDY0027"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-060">
    <description>Checks for an error when calling fn:load-xquery-module and providing the wrong type of value for the context item.</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <modified by="Tim Mills" on="2016-10-19" change="See Bug 29937"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/context-item/module" file="load-xquery-module/context-item2-module.xqm"/>
    <test>let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/context-item/module", $module := fn:load-xquery-module($module-ns, map{"context-item" : "item"}) return $module("variables")(QName($module-ns, "context"))</test>
    <result>
      <error code="FOQM0005"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-061">
    <description>Loads a module, providing a context item which is not used.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns, map{"context-item" : "item"})
      return
      ($module("variables")(QName($module-ns, "var1")), $module("variables")(QName($module-ns, "var2")), 
      $module("functions")(QName($module-ns, "func1"))(0)(), $module("functions")(QName($module-ns, "func2"))(0)())
    </test>
    <result>
      <assert-deep-eq>("var1", "var2", "func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-062">
    <description>Checks for an error when calling fn:load-xquery-module but variables option value has wrong type.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Tim Mills" on="2016-10-19" change="See Bug 29935" />
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/valid/module", 
      map{"variables" : "v"})</test>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-063">
    <description>Loads a module, variables option map contains entries of the wrong type.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-07-15" change="Added return statement in query"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <modified by="Tim Mills" on="2016-10-19" change="See Bug 29935" />
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns, map{"variables" : map{"wrong":"entry"}})
      return $module
    </test>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-064">
    <description>Loads a module, supplying an empty map for the variables option.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns, map{"variables" : map{}})
      return
      ($module("variables")(QName($module-ns, "var1")), $module("variables")(QName($module-ns, "var2")), 
      $module("functions")(QName($module-ns, "func1"))(0)(), $module("functions")(QName($module-ns, "func2"))(0)())
    </test>
    <result>
      <assert-deep-eq>("var1", "var2", "func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-065">
    <description>Loads a module, a variable value is supplied but there is no such external variable.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns, map{"variables" : map{(QName($module-ns, "wrong")):"not there"}})
      return
      ($module("variables")(QName($module-ns, "var1")), $module("variables")(QName($module-ns, "var2")), 
      $module("functions")(QName($module-ns, "func1"))(0)(), $module("functions")(QName($module-ns, "func2"))(0)())
    </test>
    <result>
      <assert-deep-eq>("var1", "var2", "func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-066">
    <description>Error loading a module, supplying a value of the wrong type for the vendor-options option.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-07-15" change="Added return statement in query"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <modified by="Tim Mills" on="2016-10-19" change="See Bug 29935" />
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns, map{"vendor-options" : 42})      
      return $module
    </test>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-067">
    <description>Error loading a module, when vendor-options option map contains entries of the wrong type.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-07-15" change="Added return statement in query"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <modified by="Tim Mills" on="2016-09-19" change="See Bug 29935"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns, map{"vendor-options" : map{"wrong":"entry"}})      
      return $module
    </test>
    <result>
      <error code="XPTY0004"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-068">
    <description>Loads a module, supplying an empty map for the vendor-options option.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns, map{"vendor-options" : map{}})
      return
      ($module("variables")(QName($module-ns, "var1")), $module("variables")(QName($module-ns, "var2")), 
      $module("functions")(QName($module-ns, "func1"))(0)(), $module("functions")(QName($module-ns, "func2"))(0)())
    </test>
    <result>
      <assert-deep-eq>("var1", "var2", "func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-069">
    <description>Loads a module, ignore vendor-options in an unrecognized namespace.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module-unrec := "http://www.w3.example/unrecognised/namespace/nobody/uses",
       $module := fn:load-xquery-module($module-ns, map{"vendor-options" : 
      map{(QName($module-unrec, "option")):"fake"}})
      return
      ($module("variables")(QName($module-ns, "var1")), $module("variables")(QName($module-ns, "var2")), 
      $module("functions")(QName($module-ns, "func1"))(0)(), $module("functions")(QName($module-ns, "func2"))(0)())
    </test>
    <result>
      <assert-deep-eq>("var1", "var2", "func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-070">
    <description>Loads a module, ignoring unrecognised option in second argument.</description>
    <created by="Debbie Lockett" on="2015-06-04"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module-unrec := "http://www.w3.example/unrecognised/namespace/nobody/uses",
       $module := fn:load-xquery-module($module-ns, map{"nonexistant-option" : "ignored"})
      return
      ($module("variables")(QName($module-ns, "var1")), $module("variables")(QName($module-ns, "var2")), 
      $module("functions")(QName($module-ns, "func1"))(0)(), $module("functions")(QName($module-ns, "func2"))(0)())
    </test>
    <result>
      <assert-deep-eq>("var1", "var2", "func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-071">
    <description>Checks for an error loading a module which is not a library module.</description>
    <created by="Debbie Lockett" on="2015-06-01"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/main/module" file="load-xquery-module/main-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/main/module")</test>
    <result>
      <error code="FOQM0003"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-072">
    <description>Error - the type of the value supplied for the option 'xquery-version' is incorrect</description>
    <created by="Debbie Lockett" on="2015-06-09"/>
    <modified by="Debbie Lockett" on="2015-07-15" change="Added return statement in query"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <modified by="Tim Mills" on="2016-09-19" change="See Bug 29935"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>  
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns, map{"xquery-version" : "3.1"})      
      return $module
    </test>
    <result>
      <error code="XPTY0004"/>
    </result>       
  </test-case>
  
  <test-case name="fn-load-xquery-module-073">
    <description>Loads a module, setting the xquery-version option explicitly.</description>
    <created by="Debbie Lockett" on="2015-06-09"/>
    <modified by="Debbie Lockett" on="2015-09-04" change="Use XPath syntax in test"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>    
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns, map{"xquery-version" : 3.1})
      return
      ($module("variables")(QName($module-ns, "var1")), $module("variables")(QName($module-ns, "var2")), 
      $module("functions")(QName($module-ns, "func1"))(0)(), $module("functions")(QName($module-ns, "func2"))(0)())
    </test>
    <result>
      <assert-deep-eq>("var1", "var2", "func1", "func2")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-901">
    <description>Checks for an error when calling fn:load-xquery-module without a module-uri.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <test>fn:load-xquery-module("")</test>
    <result>
      <any-of>
	<error code="FOQM0006"/>
	<error code="FOQM0001"/>
      </any-of>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-902">
    <description>Checks for an error when calling fn:load-xquery-module without a module-uri.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <test>fn:load-xquery-module("", map{})</test>
    <result>
      <any-of>
	<error code="FOQM0006"/>
	<error code="FOQM0001"/>
      </any-of>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-903">
    <description>Checks for an error when calling fn:load-xquery-module and the module-uri cannot be resolved.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <test>fn:load-xquery-module("http://nonexistent/module")</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-904">
    <description>Checks for an error when calling fn:load-xquery-module and the module-uri cannot be resolved.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <test>fn:load-xquery-module("http://nonexistent/module", map{})</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-905">
    <description>Checks for an error when calling fn:load-xquery-module against an invalid module.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/invalid/module" file="load-xquery-module/invalid-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/invalid/module")</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-906">
    <description>Checks for an error when calling fn:load-xquery-module against an invalid module.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/invalid/module" file="load-xquery-module/invalid-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/invalid/module", map{})</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-907">
    <description>Checks for an error when calling fn:load-xquery-module and not providing a value for an external var in the module.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-var/module" file="load-xquery-module/external-var-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/external-var/module")</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-908">
    <description>Checks for an error when calling fn:load-xquery-module and not providing a value for an external var in the module.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-var/module" file="load-xquery-module/external-var-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/external-var/module", map{})</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-909">
    <description>Checks for an error when calling fn:load-xquery-module and not providing a context item for the module.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/context-item/module" file="load-xquery-module/context-item-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/context-item/module")</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-910">
    <description>Checks for an error when calling fn:load-xquery-module and not providing a context item for the module.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/context-item/module" file="load-xquery-module/context-item-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/context-item/module", map{})</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-911">
    <description>Checks for an error when calling fn:load-xquery-module and providing the wrong type of value for an external var in the module.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/external-var/module" file="load-xquery-module/external-var-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/external-var/module", map {"variables" : map { QName("http://www.w3.org/fots/fn/load-xquery-module/external-var/module", "var1") : 1234 }})</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>

  <test-case name="fn-load-xquery-module-912">
    <description>Checks that a dynamic error caused when fn:load-xquery-module processes a module is returned as is.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/dynamic-error/module" file="load-xquery-module/dynamic-error-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/dynamic-error/module")</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-913">
    <description>Checks that a dynamic error caused when fn:load-xquery-module processes a module is returned as is.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/dynamic-error/module" file="load-xquery-module/dynamic-error-module.xqm"/>
    <test>fn:load-xquery-module("http://www.w3.org/fots/fn/load-xquery-module/dynamic-error/module", map{})</test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-914">
    <description>Loads a module.</description>
    <created by="Tim Mills" on="2016-09-07"/>
    <dependency type="feature" value="fn-load-xquery-module" satisfied="false"/>  
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
       $module := fn:load-xquery-module($module-ns)
      return
        let $vars := $module("variables"),
         $fns := $module("functions")
        return
          let $var-values := ($vars(QName($module-ns, "var1")), $vars(QName($module-ns, "var2"))),
           $fns-values := ($fns(QName($module-ns, "func1"))(0)(), $fns(QName($module-ns, "func2"))(0)())
          return
            ($var-values, $fns-values)
    </test>
    <result>
	<error code="FOQM0006"/>
    </result>
  </test-case>
  
  <test-case name="fn-load-xquery-module-915">
    <description>Error - no XQuery version 93.7 processor available</description>
    <created by="Michael Kay" on="2016-09-07"/>
    <module uri="http://www.w3.org/fots/fn/load-xquery-module/valid/module" file="load-xquery-module/valid-module.xqm"/>  
    <test>
      let $module-ns := "http://www.w3.org/fots/fn/load-xquery-module/valid/module",
      $module := fn:load-xquery-module($module-ns, map{"xquery-version" : 93.7})      
      return $module
    </test>
    <result>
      <error code="FOQM0006"/>
    </result>       
  </test-case>
  
</test-set>
