<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="array-for-each-pair"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" covers="array-for-each-pair">
    <description>Tests for the array:for-each-pair functions introduced in XPath 3.1</description>
    <link type="spec" document="http://www.w3.org/TR/xpath-functions-31/" idref="func-array-for-each-pair"/>
    <dependency type="spec" value="XP31+ XQ31+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
 
    
    <test-case name="array-for-each-pair-301">
        <description>Apply for-each-pair function to arrays with string and integer members</description>
        <created by="Debbie Lockett, Saxonica" on="2014-10-30"/>
        <environment ref="array"/>
        <test>array:for-each-pair(["A", "B", "C"], [1, 2, 3], function($x, $y) {[$x, $y]})</test>
        <result>
            <all-of>                
                <assert-type>array(*)</assert-type>
                <assert>array:size($result) eq 3</assert>
                <assert-deep-eq>[["A", 1], ["B", 2], ["C", 3]]</assert-deep-eq>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="array-for-each-pair-302" covers="array-tail">
        <description>Apply for-each-pair function to arrays with string members</description>
        <created by="Debbie Lockett, Saxonica" on="2014-10-30"/>
        <environment ref="array"/>
        <test>let $A := ["A", "B", "C", "D"] return array:for-each-pair($A, array:tail($A), concat#2)</test>
        <result>
            <all-of>                
                <assert-type>array(*)</assert-type>
                <assert>array:size($result) eq 3</assert>
                <assert-deep-eq>["AB", "BC", "CD"]</assert-deep-eq>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="array-for-each-pair-303">
        <description>Apply for-each-pair function to array with integer members</description>
        <created by="Debbie Lockett, Saxonica" on="2014-10-30"/>
        <environment ref="array"/>
        <test>array:for-each-pair([1,2,3,4,5], [2,4,6,8,10,12,14], function($a,$b){$a + $b})</test>
        <result>
            <all-of>                
                <assert-type>array(*)</assert-type>
                <assert>array:size($result) eq 5</assert>
                <assert-deep-eq>[3,6,9,12,15]</assert-deep-eq>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="array-for-each-pair-304">
        <description>Apply for-each-pair function to arrays with function and integer members</description>
        <created by="Debbie Lockett, Saxonica" on="2014-10-30"/>
        <environment ref="array"/>
        <test>array:for-each-pair([function($x){$x+2},function($x){$x*2},function($x){$x*$x}], [3,4,5], function($a,$b){$a($b)})</test>
        <result>
            <all-of>                
                <assert-type>array(*)</assert-type>
                <assert>array:size($result) eq 3</assert>
                <assert-deep-eq>[5,8,25]</assert-deep-eq>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="array-for-each-pair-305">
        <description>Apply for-each-pair function to arrays with array and integer members</description>
        <created by="Debbie Lockett, Saxonica" on="2014-10-30"/>
        <environment ref="array"/>
        <test>array:for-each-pair([["a","b","c"],["d","e","f"],["g","h","i"]], [1,2,3], array:remove#2)</test>
        <result>
            <all-of>                
                <assert-type>array(*)</assert-type>
                <assert>array:size($result) eq 3</assert>
                <assert-deep-eq>[["b","c"], ["d","f"], ["g","h"]]</assert-deep-eq>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="array-for-each-pair-306">
        <description>for-each-pair: both sequences empty</description>
        <created by="Michael Kay, Saxonica" on="2014-11-21"/>
        <environment ref="array"/>
        <test>array:for-each-pair([], [], contains#2)</test>
        <result>
            <all-of>                
                <assert-type>array(*)</assert-type>
                <assert>array:size($result) eq 0</assert>
                <assert-deep-eq>[]</assert-deep-eq>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="array-for-each-pair-307">
        <description>for-each-pair: first sequence empty</description>
        <created by="Michael Kay, Saxonica" on="2014-11-21"/>
        <environment ref="array"/>
        <test>array:for-each-pair([], [1, 2], contains#2)</test>
        <result>
            <all-of>                
                <assert-type>array(*)</assert-type>
                <assert>array:size($result) eq 0</assert>
                <assert-deep-eq>[]</assert-deep-eq>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="array-for-each-pair-308">
        <description>for-each-pair: wrong cardinality function</description>
        <created by="Michael Kay, Saxonica" on="2014-11-21"/>
        <environment ref="array"/>
        <test>array:for-each-pair(['a', 'b'], [1, 2], true#0)</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    
    <test-case name="array-for-each-pair-309">
        <description>for-each-pair: supplied function expects wrong type</description>
        <created by="Michael Kay, Saxonica" on="2014-11-21"/>
        <environment ref="array"/>
        <test>array:for-each-pair(['a', 'b'], [1, 2], contains#2)</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>


</test-set>