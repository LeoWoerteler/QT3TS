<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-CastExpr.derived">
   <description>Tests for the CastExpr production: cast expressions casting to/from built-in derived types</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-CastExpr.derived"/>
   <link type="spec" document="FuncOps" section-number="17.2"
         idref="casting-to-derived-types"/>
         
   <dependency type="spec" value="XP30+ XQ10+"/>      

   <test-case name="cast-derived-1">
      <description>Casting from float to decimal. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:decimal</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-2">
      <description> Casting from float to integer. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:decimal</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-3">
      <description> Casting from float to nonPositiveInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(-10.0) return $value cast as xs:nonPositiveInteger</test>
      <result>
         <assert-eq>-10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-4">
      <description> Casting from float to a long. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:long</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-5">
      <description> Casting from float to a nonNegativeInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:nonNegativeInteger</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-6">
      <description> Casting from float to a negativeInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(-10.0) return $value cast as xs:negativeInteger</test>
      <result>
         <assert-eq>-10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-7">
      <description> Casting from float to an int. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:int</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-8">
      <description> Casting from float to an unsignedLong. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:unsignedLong</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-9">
      <description> Casting from float to a positiveInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:positiveInteger</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-10">
      <description> Casting from float to a short. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:short</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-11">
      <description> Casting from float to an unsignedInt. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:unsignedInt</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-12">
      <description> Casting from float to an unsignedShort. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:unsignedShort</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-13">
      <description> Casting from float to an unsignedByte. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:unsignedByte</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-14">
      <description> Casting from float to a byte. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:float(10.0) return $value cast as xs:byte</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-15">
      <description> Casting from double to a decimal. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:double(10E2) return $value cast as xs:decimal</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-16">
      <description> Casting from double to an integer. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:double(10E2) return $value cast as xs:integer</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-17">
      <description> Casting from double to an positiveInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:double(10E2) return $value cast as xs:positiveInteger</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-18">
      <description> Casting from double to a long. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:double(10E2) return $value cast as xs:long</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-19">
      <description> Casting from double to an int. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:double(10E2) return $value cast as xs:int</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-20">
      <description> Casting from double to an unsignedLong. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:double(10E2) return $value cast as xs:unsignedLong</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-derived-21">
      <description> Casting from double to a short. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:double(10E2) return $value cast as xs:short</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>
   
   <test-case name="cast-to-parent-1">
      <description>Casting from decimal to float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:decimal(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-2">
      <description> Casting from intger to float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-3">
      <description> Casting from nonPositiveInteger to float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:nonPositiveInteger(-10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>-10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-4">
      <description> Casting from long to float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-5">
      <description> Casting from nonNegativeInteger to float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:nonNegativeInteger(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-6">
      <description> Casting from a negativeInteger to a float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:negativeInteger(-10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>-10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-7">
      <description> Casting from an int to a float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:int(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-8">
      <description> Casting from an unsignedLong to a float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:unsignedLong(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-9">
      <description> Casting from a positiveInteger to a float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:positiveInteger(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-10">
      <description> Casting from a shortto a float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:short(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-11">
      <description> Casting from an unsignedInt to a float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:unsignedInt(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-12">
      <description> Casting from an unsignedShort to a float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:unsignedShort(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-13">
      <description> Casting from an unsignedByte to a float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:unsignedByte(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-14">
      <description> Casting from a byte to a float. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:byte(10.0) return $value cast as xs:float</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-15">
      <description> Casting from a decimal to a double. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:decimal(10E2) return $value cast as xs:double</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-16">
      <description> Casting from an integer to a double. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10E2) return $value cast as xs:double</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-17">
      <description> Casting from a positiveInteger to a double. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:positiveInteger(10E2) return $value cast as xs:double</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-18">
      <description> Casting from a long to a double. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10E2) return $value cast as xs:double</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-19">
      <description> Casting from an int to a double. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:int(10E2) return $value cast as xs:double</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-20">
      <description> Casting from an unsignedLong to a double. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:unsignedLong(10E2) return $value cast as xs:double</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-to-parent-21">
      <description> Casting from a short to a double. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:short(10E2) return $value cast as xs:double</test>
      <result>
         <assert-eq>1000</assert-eq>
      </result>
   </test-case>
   
   <test-case name="cast-within-1">
      <description>Casting from integer to nonPositiveInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(-10.0) return $value cast as xs:nonPositiveInteger</test>
      <result>
         <assert-eq>-10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-2">
      <description> Casting from integer to long. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:long</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-3">
      <description> Casting from integer to nonNegativeInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:nonNegativeInteger</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-4">
      <description> Casting from integer to negativeInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(-10.0) return $value cast as xs:negativeInteger</test>
      <result>
         <assert-eq>-10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-5">
      <description> Casting from integer to int. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:int</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-6">
      <description> Casting from integer to unsignedLong. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:unsignedLong</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-7">
      <description> Casting from integer to positiveInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:positiveInteger</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-8">
      <description> Casting from integer to short. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:short</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-9">
      <description> Casting from integer to unsignedInt. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:unsignedInt</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-10">
      <description> Casting from integer to byte. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:byte</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-11">
      <description> Casting from integer to unsignedShort. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:unsignedShort</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-12">
      <description> Casting from integer to an unsignedByte. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:integer(10.0) return $value cast as xs:unsignedByte</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-13">
      <description> Casting from a long to an integer. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10.0) return $value cast as xs:integer</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-14">
      <description> Casting from long to a nonNegativeInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10.0) return $value cast as xs:nonNegativeInteger</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-15">
      <description> Casting from long to a negativeInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(-10) return $value cast as xs:negativeInteger</test>
      <result>
         <assert-eq>-10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-16">
      <description> Casting from long to an int. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10) return $value cast as xs:int</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-17">
      <description> Casting from long to an unsignedLong. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10) return $value cast as xs:unsignedLong</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-18">
      <description> Casting from long to a positiveInteger. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10) return $value cast as xs:positiveInteger</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-19">
      <description> Casting from long to a short. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10) return $value cast as xs:short</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-20">
      <description> Casting from long to unsignedInt. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10) return $value cast as xs:unsignedInt</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>

   <test-case name="cast-within-21">
      <description> Casting from long to a byte. </description>
      <created by="Carmelo Montanez" on="2006-03-27"/>
      <test>let $value := xs:long(10) return $value cast as xs:byte</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>
</test-set>