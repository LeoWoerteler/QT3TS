<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-ArrayTest">
   <description>Tests for the ArrayTest production: array types in XQuery 3.1</description>
             

   <test-case name="ArrayTest-001" covers="array-square-constructor">
      <description>empty square array constructor</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[]</test>
      <result>
         <all-of>
            <assert-type>array(*)</assert-type>
            <assert-type>array(empty-sequence())</assert-type>
            <assert-type>array(xs:string)</assert-type>
         </all-of>
      </result>
   </test-case>

   <test-case name="ArrayTest-002" covers="array-curly-constructor">
      <description>empty curly array constructor</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>array{}</test>
      <result>
         <all-of>
            <assert-type>array(*)</assert-type>
            <assert-type>array(empty-sequence())</assert-type>
            <assert-type>array(xs:string)</assert-type>
         </all-of>
      </result>
   </test-case>

   <test-case name="ArrayTest-003" covers="array-square-constructor">
      <description>square array constructor, number of members </description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>array:size([(), ('A', 'B', 'C'), 'D'])</test>
      <result>
         <all-of>
             <assert-eq>3</assert-eq>
             <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>

   <test-case name="ArrayTest-004" covers="array-curly-constructor">
      <description>curly array constructor, number of members </description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>array:size(array{(), ('A', 'B', 'C'), 'D'})</test>
      <result>
         <all-of>
             <assert-eq>4</assert-eq>
             <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
    <test-case name="ArrayTest-005" covers="array-square-constructor">
      <description>square array constructor, number of members </description>
      <created by="Carla Spruit" on="2014-10-28"/>
       <dependency type="spec" value="XQ31+"/>
      <test>declare function local:fun() {1 to 5}; array:size([local:fun()])</test>
      <result>
         <all-of>
             <assert-eq>1</assert-eq>
             <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>

    <test-case name="ArrayTest-006" covers="array-curly-constructor">
      <description>curly array constructor, number of members </description>
      <created by="Carla Spruit" on="2014-10-28"/>
       <dependency type="spec" value="XQ31+"/>
      <test>declare function local:fun() {1 to 5}; array:size(array{local:fun()})</test>
      <result>
         <all-of>
             <assert-eq>5</assert-eq>
             <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="ArrayTest-007" covers="array-square-constructor">
      <description>square array constructor, lookup </description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XQ31+"/>
      <test>declare function local:fun() {1 to 5}; [local:fun()](1)</test>
      <result>
        <assert-deep-eq>(1, 2, 3, 4, 5)</assert-deep-eq>
      </result>
   </test-case>

    <test-case name="ArrayTest-008" covers="array-curly-constructor">
      <description>curly array constructor, lookup </description>
      <created by="Carla Spruit" on="2014-10-28"/>
       <dependency type="spec" value="XQ31+"/>
      <test>declare function local:fun() {1 to 5}; array{local:fun()}(1)</test>
      <result>
         <all-of>
             <assert-eq>1</assert-eq>
             <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>

   <test-case name="ArrayTest-009" covers="array-square-constructor">
      <description>square array constructor, lookup </description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XQ31+"/>
      <test>declare function local:fun() {1 to 5}; [local:fun()]?1</test>
      <result>
        <assert-deep-eq>(1, 2, 3, 4, 5)</assert-deep-eq>
      </result>
   </test-case>

    <test-case name="ArrayTest-010" covers="array-curly-constructor">
      <description>curly array constructor, lookup </description>
      <created by="Carla Spruit" on="2014-10-28"/>
       <dependency type="spec" value="XQ31+"/>
      <test>declare function local:fun() {1 to 5}; array{local:fun()}?1</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
      
   <test-case name="ArrayTest-011" covers="array-general">
      <description>key must be an integer value</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[1, 2, 3](1.1)</test>
      <result>
        <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="ArrayTest-012" covers="postfix-lookup">
      <description>lookup outside of range</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="O'Neil Delpratt" on="2014-12-16" change="Bug fix relating #27180: Change error code" />
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[1, 2, 3]?0</test>
      <result>
        <error code="FOAY0001"/>
      </result>
   </test-case>

   <test-case name="ArrayTest-013" covers="postfix-lookup">
      <description>lookup outside of range</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="O'Neil Delpratt" on="2014-12-16" change="Bug fix relating #27180: Change error code" />
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[1, 2, 3]?4</test>
      <result>
        <error code="FOAY0001"/>
      </result>
   </test-case>
   
   <test-case name="ArrayTest-014" covers="array-general">
      <description>lookup key must be a positive integer</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="O'Neil Delpratt" on="2014-12-16" change="Bug fix relating #27180: Change error code" />
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[1, 2, 3](-1)</test>
      <result>
         <error code="FOAY0001"/>
      </result>
   </test-case>

   <test-case name="ArrayTest-015" covers="postfix-lookup">
      <description>lookup by using a parenthized expression</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>let $k := 2 to 3 return ['A', 'B', 'C']?($k)</test>
      <result>
        <assert-deep-eq>('B', 'C')</assert-deep-eq>
      </result>
   </test-case>
   
    <test-case name="ArrayTest-016" covers="postfix-lookup">
      <description>lookup by using a parenthized expression</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>['A', 'B', 'C']?(2 to 3)</test>
      <result>
        <assert-deep-eq>('B', 'C')</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ArrayTest-017" covers="postfix-lookup">
      <description>lookup by using *</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>['A', 'B', 'C']?*</test>
      <result>
        <assert-deep-eq>('A', 'B', 'C')</assert-deep-eq>
      </result>
   </test-case>   
   
   <test-case name="ArrayTest-018" covers="postfix-lookup fn-data">
      <description>lookup with nested arrays</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>fn:data([['A', 'B', 'C'], ['D', 'E'], []]?2)</test>
      <result>
        <assert-deep-eq>('D', 'E')</assert-deep-eq>
      </result>
   </test-case>   

   <test-case name="ArrayTest-019" covers="postfix-lookup fn-data">
      <description>lookup with nested arrays</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>fn:data([['A', 'B', 'C'], ['D', 'E'], []]?3)</test>
      <result>
        <assert-empty/>
      </result>
   </test-case>   
   
   <test-case name="ArrayTest-020" covers="postfix-lookup">
      <description>multilevel lookup in nested arrays</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[['A', 'B', 'C'], ['D', 'E'], []]?1?2</test>
      <result>
        <assert-eq>'B'</assert-eq>
      </result>
   </test-case>   
      
    <test-case name="ArrayTest-021" covers="postfix-lookup fn-data">
      <description>multilevel wildcard lookup in nested arrays</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>fn:data([['A', 'B', 'C'], ['D', 'E'], []]?*?*)</test>
      <result>
        <assert-deep-eq>('A', 'B', 'C', 'D', 'E')</assert-deep-eq>
      </result>
   </test-case>  
   
   <test-case name="ArrayTest-022" covers="postfix-lookup">
      <description>wildcard lookup in empty array</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[]?*</test>
      <result>
        <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ArrayTest-023" covers="postfix-lookup">
      <description>wildcard lookup in empty array</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[]?*?*</test>
      <result>
        <assert-empty/>
      </result>
   </test-case>   
   
   <test-case name="ArrayTest-024" covers="postfix-lookup">
      <description>lookup in empty array</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="O'Neil Delpratt" on="2014-12-16" change="Bug fix relating #27180: Change error code" />
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[]?2</test>
      <result>
        <error code="FOAY0001"/>
      </result>
   </test-case>  
  
   
   <test-case name="ArrayTest-025" covers="postfix-lookup">
      <description>lookup in sequence of arrays</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>(['A', 'B', 'C'], ['D', 'E'])?2</test>
      <result>
        <assert-deep-eq>('B', 'E')</assert-deep-eq>
      </result>
   </test-case>      
   
   <test-case name="ArrayTest-026" covers="postfix-lookup">
      <description>lookup in sequence of arrays with empty array</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="O'Neil Delpratt" on="2014-12-16" change="Bug fix relating #27180: Change error code" />
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>(['A', 'B', 'C'], ['D', 'E'], [])?2</test>
      <result>
        <error code="FOAY0001"/>
      </result>
   </test-case> 
   
   <test-case name="ArrayTest-027" covers="postfix-lookup">
      <description>lookup in array with nested map</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-21" change="assert deep-eq rather than eq"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[[1, 2, 3], map:entry(3, 5)]?*?3</test>
      <result>
        <assert-deep-eq>(3, 5)</assert-deep-eq>
      </result>
   </test-case>            
   
   <test-case name="ArrayTest-028" covers="array-general">
      <description>atomize array with nodes</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[let $x := <root><elem>1</elem><elem>2</elem></root> return [$x/elem[1]] + [$x/elem[2]]]]></test>
      <result>
        <assert-eq>3</assert-eq>
      </result>
   </test-case>            
   
   <test-case name="ArrayTest-029" covers="array-general fn-data">
      <description>atomize array with nodes</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[fn:data([<root><elem>1</elem><elem>2</elem></root> + 4])]]></test>
      <result>
        <assert-eq>16</assert-eq>
      </result>
   </test-case>            

   <test-case name="ArrayTest-030" covers="array-general fn-data">
      <description>atomize array with nested arrays</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-20" change="assert-eq -> assert-deep-eq"/>    
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>fn:data([[1, 2], [3, 4, [5, 6]]])</test>
      <result>
        <assert-deep-eq>(1, 2, 3, 4, 5, 6)</assert-deep-eq>
      </result>
   </test-case>            
   
    <test-case name="ArrayTest-031" covers="error-FOTY0013">
      <description>atomize array with nested map</description>
      <created by="Carla Spruit" on="2014-10-28"/>
       <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[map:entry('a', 'b')] + 1</test>
      <result>
        <error code="FOTY0013"/>
      </result>
   </test-case>       
   
   <test-case name="ArrayTest-032" covers="error-FOTY0013">
      <description>atomize array with nested function item</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <dependency type="feature" value="higherOrderFunctions"/>      
      <test>[data#1] + 1</test>
      <result>
        <error code="FOTY0013"/>
      </result>
   </test-case>            

   <test-case name="ArrayTest-033" covers="array-general">
      <description>instance of</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>["A", "B"]</test>
      <result>
         <all-of>
            <assert-type>array(*)</assert-type>
            <assert-type>array(xs:string)</assert-type>
         </all-of>
      </result>
   </test-case>     
   
   <test-case name="ArrayTest-034" covers="array-general">
      <description>instance of</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[("A", "B")]</test>
      <result>
         <all-of>
            <assert-type>array(*)</assert-type>
            <assert-type>array(xs:string*)</assert-type>
         </all-of>
      </result>
   </test-case>     
          
   <test-case name="ArrayTest-035" covers="array-general">
      <description>instance of, wrong cardinality</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[("A", "B"), "C"] instance of array(xs:string)</test>
      <result>
         <assert-false/>
      </result>
   </test-case>     

   <test-case name="ArrayTest-036" covers="array-general">
      <description>instance of, wrong cardinality</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[(), "A"] instance of array(xs:string)</test>
      <result>
         <assert-false/>
      </result>
   </test-case>     

   <test-case name="ArrayTest-037" covers="array-general">
      <description>instance of, wrong type</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[(), "A"] instance of array(xs:integer*)</test>
      <result>
         <assert-false/>
      </result>
   </test-case>     

   <test-case name="ArrayTest-038" covers="array-general">
      <description>instance of nested array</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[["A"], ["B"]] instance of array(array(xs:string))</test>
      <result>
         <assert-true/>
      </result>
   </test-case> 
   
   <test-case name="ArrayTest-039" covers="array-general">
      <description>instance of array with items</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[["A"], ["B"]] instance of array(item())</test>
      <result>
         <assert-true/>
      </result>
   </test-case>     
   
   <test-case name="ArrayTest-040" covers="array-general">
      <description>instance of array, xs:integer is subtype of xs:decimal</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[xs:integer("10")] instance of array(xs:decimal)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>     
    
   <test-case name="ArrayTest-041" covers="array-general">
      <description>instance of item</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>[["A"], ["B"]] instance of item()</test>
      <result>
         <assert-true/>
      </result>
   </test-case>     
   
   <test-case name="ArrayTest-042" covers="array-general">
      <description>instance of function</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <dependency type="feature" value="higherOrderFunctions"/>      
      <test>[["A"], ["B"]] instance of function(*)</test>
      <result>
         <assert-true/>
      </result>
   </test-case>     

   <test-case name="ArrayTest-043" covers="array-general">
      <description>instance of function</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <dependency type="feature" value="higherOrderFunctions"/>      
      <test>[["A"], ["B"]] instance of function(xs:integer) as item()*</test>
      <result>
         <assert-true/>
      </result>
   </test-case>     

   <test-case name="ArrayTest-044" covers="array-general">
      <description>effective boolean value of array must throw an exception</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>if ([1, 2]) then 1 else 2</test>
      <result>
         <error code="FORG0006"/>
      </result>
   </test-case>     
   
    <test-case name="ArrayTest-045" covers="array-general">
      <description>general comparison</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>['A'] = 'A'</test>
      <result>
         <assert-true/>
      </result>
   </test-case>     

   <test-case name="ArrayTest-046" covers="array-general">
      <description>general comparison</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>['A', 'B', 'C'] = 'A'</test>
      <result>
         <assert-true/>
      </result>
   </test-case>     

   <test-case name="ArrayTest-047" covers="array-general">
      <description>element content</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-20" change="assert-xml in result, dependency on XQuery"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[<a>{['a', ['b', 'c'], 'd']}</a>]]></test>
      <result>
         <assert-xml><![CDATA[<a>a b c d</a>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="ArrayTest-048" covers="array-general">
      <description>element content, whitespace in array</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-20" change="assert-xml in result, dependency on XQuery"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[<a>{[ 'a', ['b', 'c'], 'd']}</a>]]></test>
      <result>
         <assert-xml><![CDATA[<a>a b c d</a>]]></assert-xml>
      </result>
   </test-case>     

   <test-case name="ArrayTest-049" covers="array-general">
      <description>element constructor</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-20" change="assert-xml in result, dependency on XQuery"/>
      <dependency type="spec" value="XQ31+"/>
      <test>element a {['a', ['b', 'c'], 'd']}</test>
      <result>
         <assert-xml><![CDATA[<a>a b c d</a>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="ArrayTest-050" covers="array-general">
      <description>attribute content</description>
      <created by="Carla Spruit" on="2014-10-28"/>
      <modified by="Michael Kay" on="2014-11-20" change="dependency on XQuery"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[<chapter ref="{[1, 5 to 7, 9]}"/>/@ref/string()]]></test>
      <result>
         <assert-eq>"[1 5 6 7 9]"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ArrayTest-051" covers="array-general">
      <description>element constructor, contained arrays are flattened not atomized (bug 27463)</description>
      <created by="Michael Kay" on="2014-12-03" change="assert-xml in result, dependency on XQuery"/>
      <modified by="Michael Dyck" on="2014-12-10" change="put the test-query in a CDATA section"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[element a {[<z x='3'/>/@x, <a>22</a>, [<b>33</b>, <c>44</c>], <d>55</d>]}]]></test>
      <result>
         <assert-xml><![CDATA[<a x='3'><a>22</a><b>33</b><c>44</c><d>55</d></a>]]></assert-xml>
      </result>
   </test-case>
</test-set>
