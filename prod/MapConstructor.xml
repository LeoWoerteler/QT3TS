<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-MapConstructor">
   <description>Tests for the MapConstructor production: map constructor expressions in XPath 3.1</description>

         
   <dependency type="spec" value="XP31+ XQ31+"/>      

   <test-case name="MapConstructor-001" covers="map-constructor map-general">
      <description>empty map</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map{})</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-002" covers="map-constructor map-general">
      <description>empty map</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map{     })</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-003" covers="map-constructor map-general">
      <description>empty map</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map {})</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-004" covers="map-constructor map-general">
      <description>singleton map</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map{"a":2})</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-005" covers="map-constructor map-general">
      <description>singleton map</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map{ "a" : 2 })</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-006" covers="map-constructor map-general">
      <description>doubleton map</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map{"a":2,"b":3})</test>
      <result>
         <assert-eq>2</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-007" covers="map-constructor map-general">
      <description>doubleton map</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map { "a" : 2 , "b" : 3 })</test>
      <result>
         <assert-eq>2</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-008" covers="map-constructor map-general">
      <description>no trailing comma allowed</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map {"a":2, })</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-009" covers="map-constructor map-general">
      <description>no leading comma allowed</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map {,"a":2})</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-010" covers="map-constructor map-general">
      <description>key must be an ExprSingle</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map {"a","b":2})</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-011" covers="map-constructor map-general">
      <description>value must be an ExprSingle</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map {"a":2,3})</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-012" covers="map-constructor map-general">
      <description>key can be a node constructor</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[map:size(map {<a>x</a>:2})]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-013" covers="map-constructor map-general">
      <description>value can be a node constructor</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[map:size(map {2:<a>x</a>})]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-014" covers="map-constructor map-general">
      <description>value can be a node constructor with embedded content</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[map:size(map {2:<a>x{25}y</a>})]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-015" covers="map-constructor map-general">
      <description>colon after NCName is OK</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <modified by="Michael Kay" on="2016-02-23" change="corrected results"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[map:size(<a><b>x</b></a>/map{b:2})]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-016" covers="map-constructor map-general">
      <description>colon after NCName is not OK if followed by another name</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[declare namespace b = "http://b.com"; map:size(<a><b:b>x</b:b></a>/map{b:b})]]></test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-017" covers="map-constructor map-general">
      <description>colon here should be OK</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[map:size(<a><b>x</b></a>/map{self::a: b})]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-018" covers="map-constructor map-general">
      <description>colon here is not OK</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[declare namespace a = "http://a.com"; map:size(<a><a:b>x</a:b></a>/map{self::a:b})]]></test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-019" covers="map-constructor map-general">
      <description>colon here should be OK</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[map:size(<a><b>x</b></a>/map{*:b:b})]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-020" covers="map-constructor map-general">
      <description>colon here should be OK</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[map:size(<a><b>x</b></a>/map{* :b})]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-021" covers="map-constructor map-general">
      <description>colon here should be OK</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[map:size(<a><self>x</self></a>/map{self:2})]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-022" covers="map-constructor map-general">
      <description>rhs can be a map</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map{2:map{3:4}})</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-023" covers="map-constructor map-general">
      <description>lhs must be a singleton</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map{(1 to 5)[. gt year-from-date(current-date())]:93})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-024" covers="map-constructor map-general">
      <description>lhs must be a singleton</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>map:size(map{(1 to 5)[. lt year-from-date(current-date())]:93})</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-025" covers="map-constructor map-general">
      <description>
         Colon here is questionable. We are testing the rule in A.2:
         "When tokenizing, the longest possible match that is consistent with the EBNF is used."
         After a lookup operator, an NCName is consistent with the EBNF but a QName (containing a colon)
         is not, so the tokenizer should extract the NCName "a".
      </description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <test>let $m := map{'a':1} return map:size(map{$m?a:true()})</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-026" covers="map-constructor map-general">
      <description>colon after a QName is OK</description>
      <created by="Michael Kay" on="2016-02-08"/>
      <environment ref="map"/>
      <dependency type="spec" value="XQ31+"/> 
      <test><![CDATA[declare namespace z = "http://z.com"; map:size(<a><z:b>x</z:b></a>/map{z:b:z:b})]]></test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

  <test-case name="MapConstructor-027" covers="map-constructor map-general">
      <description>Bug 29501</description>
      <created by="Josh Spiegel" on="2016-05-04"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[

        declare namespace a = "http://example.com";

        <dot>
          <a:b>key</a:b>
          <c>value</c>
        </dot>
        !
        map{a:b:c}

        =>
        deep-equal(map{"key":<c>value</c>})
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="MapConstructor-028" covers="map-constructor map-general">
      <description>Bug 29501</description>
      <created by="Josh Spiegel" on="2016-05-04"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[

        declare namespace a = "http://example.com";

        <dot>
          <a:b>key</a:b>
          <c>value</c>
        </dot>
        !
        map{a:*:c}

        =>
        deep-equal(map{"key":<c>value</c>})

      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="MapConstructor-029" covers="map-constructor map-general">
      <description>Bug 29501</description>
      <created by="Josh Spiegel" on="2016-05-04"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[

        declare namespace a = "http://example.com";

        <dot>
          <a:b>key</a:b>
          <c>value</c>
        </dot>
        !
        map{*:b:c}

        =>
        deep-equal(map{"key":<c>value</c>})
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="MapConstructor-030" covers="map-constructor map-general">
      <description>Bug 29501</description>
      <created by="Josh Spiegel" on="2016-05-04"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[

        declare namespace a = "http://example.com";

        <dot>
          <a:b>key</a:b>
        </dot>
        !
        map{a:b:*}

        =>
        deep-equal(map{"key":<a:b xmlns:a="http://example.com">key</a:b>})
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="MapConstructor-031" covers="map-constructor map-general">
      <description>Bug 29501</description>
      <created by="Josh Spiegel" on="2016-05-04"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[

        declare namespace a = "http://example.com";

        <dot>
          <a:b>key</a:b>
        </dot>
        !
        map{a:*:*}

        =>
        deep-equal(map{"key":<a:b xmlns:a="http://example.com">key</a:b>})
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="MapConstructor-032" covers="map-constructor map-general">
      <description>Bug 29501</description>
      <created by="Josh Spiegel" on="2016-05-04"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[

        declare namespace a = "http://example.com";

        <dot>
          <a:b>key</a:b>
        </dot>
        !
        map{*:b:*}

        => 
        deep-equal(map{"key":<a:b xmlns:a="http://example.com">key</a:b>})

      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="MapConstructor-033" covers="map-constructor map-general">
      <description>Bug 29501</description>
      <created by="Josh Spiegel" on="2016-05-04"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
        <e><f>foo</f></e> ! map{*:*}
        =>
        deep-equal(map{"foo":<f>foo</f>})
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="MapConstructor-034" covers="map-constructor map-general">
      <description>Bug 29501</description>
      <created by="Josh Spiegel" on="2016-05-04"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
        <e><f>foo</f></e> ! map{*:f:*:f}
        =>
        deep-equal(map{"foo":<f>foo</f>})
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="MapConstructor-035" covers="map-constructor map-general">
      <description>Bug 29501</description>
      <created by="Josh Spiegel" on="2016-05-04"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
         <e><f>4</f></e>!map{*:*div*,*||*:*}
         =>
         deep-equal(map{"44":<f>4</f>,"4":1})
      ]]></test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-036" covers="map-constructor map-general">
      <description>Duplicate keys</description>
      <created by="Michael Kay" on="2016-07-28"/>
      <environment ref="map"/>
      <test>map{2+2: "a", 5-1: "b"}</test>
      <result>
         <error code="XQDY0137"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-037" covers="map-constructor map-general">
      <description>Duplicate keys</description>
      <created by="Michael Kay" on="2016-07-28"/>
      <environment ref="map"/>
      <test>map{xs:integer(2): 5, xs:float("2.0"): 8}</test>
      <result>
         <error code="XQDY0137"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-038" covers="map-constructor map-general">
      <description>Duplicate keys</description>
      <created by="Michael Kay" on="2016-07-28"/>
      <environment ref="map"/>
      <test>map{xs:double("NaN"): true(), xs:float("NaN"): false()}</test>
      <result>
         <error code="XQDY0137"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-039" covers="map-constructor map-general">
      <description>Duplicate keys</description>
      <created by="Michael Kay" on="2016-07-28"/>
      <environment ref="map"/>
      <test>map{xs:double("INF"): true(), xs:float("INF"): false()}</test>
      <result>
         <error code="XQDY0137"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-040" covers="map-constructor map-general">
      <description>Duplicate keys</description>
      <created by="Michael Kay" on="2016-07-28"/>
      <environment ref="map"/>
      <test>map{xs:double("-INF"): true(), xs:float("-INF"): false()}</test>
      <result>
         <error code="XQDY0137"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-041" covers="map-constructor map-general">
      <description>Duplicate keys</description>
      <created by="Michael Kay" on="2016-07-28"/>
      <environment ref="map"/>
      <test>map{xs:time("24:00:00"): true(), xs:time("00:00:00"): false()}</test>
      <result>
         <error code="XQDY0137"/>
      </result>
   </test-case>
   
   <test-case name="MapConstructor-042" covers="map-constructor map-general">
      <description>Duplicate keys</description>
      <created by="Michael Kay" on="2016-07-28"/>
      <environment ref="map"/>
      <test>map{xs:time("05:00:00+05:00"): true(), xs:time("00:00:00Z"): false()}</test>
      <result>
         <error code="XQDY0137"/>
      </result>
   </test-case>

</test-set>
