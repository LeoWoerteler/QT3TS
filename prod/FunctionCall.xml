<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-FunctionCall">
   <description>Tests for the FunctionCall production.
    Contains tests verifying the function calling mechanism; not a particular function implementation.</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-FunctionCall"/>

   <test-case name="K-FunctionCallExpr-1">
      <description> A test whose essence is: `func-does-not-exist(1, 2, 3)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>func-does-not-exist(1, 2, 3)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-2">
      <description> A test whose essence is: `fn:func-does-not-exist(1, 2, 3)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>fn:func-does-not-exist(1, 2, 3)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-3">
      <description> A test whose essence is: `xs:func-does-not-exist(1, 2, 3)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>xs:func-does-not-exist(1, 2, 3)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-4">
      <description> A test whose essence is: `local:func-does-not-exist(1, 2, 3)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>local:func-does-not-exist(1, 2, 3)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-5">
      <description> A test whose essence is: `prefix-does-not-exist:func-does-not-exist(1, 2, 3)`. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>prefix-does-not-exist:func-does-not-exist(1, 2, 3)</test>
      <result>
         <error code="XPST0081"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-6">
      <description> A function call containing an invalid QName as name. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>f:f:()</test>
      <result>
         <any-of>
            <error code="XPST0003"/>
            <error code="XPST0081"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-7">
      <description> A function call containing an invalid QName as name. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>:f()</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-8">
      <description> A function call containing an invalid QName as name. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>:f()</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-9">
      <description> A function call containing an invalid QName as name. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>1fd()</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-10">
      <description> A function call containing an invalid QName as name. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>p:f:lname()</test>
      <result>
         <any-of>
            <error code="XPST0003"/>
            <error code="XPST0081"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-11">
      <description> No function by name fn:document() exists(although one does in XSL-T). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>document("example.com/file.ext")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-12">
      <description> No function by name fn:unparsed-text() exists(although one does in XSL-T). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>unparsed-text("example.com/file.ext")</test>
      <result>
         <any-of>
            <error code="XPST0017"/>
            <error code="XTDE1170"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-13">
      <description> No function by name fn:unparsed-text() exists(although one does in XSL-T). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>unparsed-text-available("example.com/file.ext")</test>
      <result>
         <any-of>
            <assert-false/>
            <error code="XPST0017"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-14">
      <description> No function by name fn:key() exists(although one does in XSL-T). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>key('func', "a value")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-15">
      <description> No function by name fn:format-number() exists in XQuery 1.0 (although one does in XSLT and in XQuery 1.1). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>format-number(3, "0000")</test>
      <result>
         <any-of>
            <assert-eq>0003</assert-eq>
            <error code="XPST0017"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-16">
      <description> No function by name fn:format-time() exists in XQuery 1.0 (although one does in XSLT). Amended MHK 2009-05-21 to deliver repeatable results under XQuery 1.1 </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>matches(format-time(current-time(), "[H01]:[m01]"), "[0-2][0-9]:[0-5][0-9]")</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0017"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-17">
      <description> No function by name fn:format-time() exists in XQuery 1.0 (although one does in XSLT and XQuery 1.1). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>matches(format-time(current-time(), "[H01]:[m01]", (), (), ()), "..:..")</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0017"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-18">
      <description> No function by name fn:format-date() exists in XQuery 1.0 (although one does in XSLT and XQuery 1.1). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>matches(format-dateTime(current-dateTime(), "[Y0001]-[M01]-[D01]"), "[0-9]{4}-[0-9]{2}-[0-9]{2}")</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0017"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-19">
      <description> No function by name fn:format-dateTime() exists in XQuery 1.0 (although one does in XSLT and XQuery 1.1). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>matches(format-dateTime(current-dateTime(), "[Y0001]-[M01]-[D01]", (), (), ()), "....-..-..")</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0017"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-20">
      <description> No function by name fn:format-dateTime() exists in XQuery 1.0 (although one does in XSLT and XQuery 1.1). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>matches(format-dateTime(current-dateTime(), "[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]"), "[0-1][0-9]/[0-3][0-9]/[0-9]{4} at [0-9]{2}:[0-9]{2}:[0-9]{2}")</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0017"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-21">
      <description> No function by name fn:format-dateTime() exists in XQuery 1.0 (although it does exist in XSLT and XQuery 1.1). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>matches(format-dateTime(current-dateTime(), "[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]", (), (), ()), "../../.... at ..:..:..")</test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0017"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-22">
      <description> No function by name fn:current() exists(although one does in XSL-T). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>current()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-23">
      <description> No function by name fn:unparsed-entity-uri() exists(although one does in XSL-T). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>unparsed-entity-uri("example.com/file.ext")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-24">
      <description> No function by name fn:unparsed-entity-public-id() exists(although one does in XSL-T). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>unparsed-entity-public-id("entity")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-25">
      <description> No function by name fn:generate-id() exists(although one does in XSLT). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[generate-id(<a/>) castable as xs:NCName]]></test>
      <result>
         <any-of>
            <assert-true/>
            <error code="XPST0017"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-26">
      <description> No function by name fn:system-property() exists(although one does in XSL-T). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>system-property("xsl:vendor")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-27">
      <description> No function by name fn:escape-uri() exists(although one did in older 'Functions &amp; Operators' drafts). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>fn:escape-uri("http:/example.com/")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K-FunctionCallExpr-28">
      <description> No function by name fn:sub-sequence() exists(although one by name fn:subsequence does). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>fn:sub-sequence("http:/example.com/", 1, 1)</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-1">
      <description> Two user functions with many arguments. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
        declare function local:bar($c, $d, $e, $f, $g, $h, $i, $j, $a, $b) { 1 }; 
        declare function local:moo($k) { $k }; 
        local:moo(1)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-2">
      <description> Function current-grouping-key() is not available in XQuery. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>current-grouping-key()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-3">
      <description> Function current() is not available in XQuery. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>current()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-4">
      <description> Function unparsed-entity-uri() is not available in XQuery. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>unparsed-entity-uri("str")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-5">
      <description> Function unparsed-entity-public-id() is not available in XQuery. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>unparsed-entity-public-id("str")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-6">
      <description> Function generate-id() is not available in XQuery. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>generate-id("str")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-7">
      <description> Function generate-id() is not available in XQuery(#2). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>generate-id()</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-8">
      <description> Function system-property() is not available in XQuery(#2). </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>system-property("property")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-9">
      <description> Function key() is not available in XQuery. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <test>key("id")</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-10">
      <description> Check that nodes, when passed through function arguments, have proper node identities. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test><![CDATA[
        declare variable $a := <a/>; 
        declare function local:testSingleNodeIdentity($node as node()) { $node is $node }; 
        declare function local:testDoubleNodeIdentity($a as node(), $b as node()) { $a is $b }; 
        local:testSingleNodeIdentity(<a/>), local:testDoubleNodeIdentity(<a/>, <b/>), local:testDoubleNodeIdentity($a, $a)
      ]]></test>
      <result>
         <assert-string-value>true false true</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-11">
      <description> A very simple string-difference function. </description>
      <created by="Frans Englich" on="2007-11-26"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
        declare function local:compare($arg1 as xs:string, $arg2 as xs:string) { 
            let $cps1 := string-to-codepoints($arg1), 
            $cps2 := string-to-codepoints($arg2) 
            return abs(count($cps1) - count($cps2)) + sum(for $x in 1 to min((count($cps1), count($cps2))) 
                                                          return if ($cps1[$x] ne $cps2[$x]) then 1 else ()) }; 
        local:compare("", ""), 
        local:compare("a", ""), 
        local:compare("", "a"), 
        local:compare("a", "a"), 
        local:compare("", "aa"), 
        local:compare("aa", "ab"), 
        local:compare("ba", "ba"), 
        local:compare("bab", "bbb"), 
        local:compare("aba", "bab")
     </test>
      <result>
         <assert-string-value>0 1 1 0 2 1 0 1 3</assert-string-value>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-12">
      <description> Trigger an infinite recursion in one implementation. </description>
      <created by="Frans Englich" on="2008-05-08"/>
      <dependency type="spec" value="XQ10+"/>
      <test>
        declare function local:func1() { if(local:func2('b')) then 3 else local:func1() }; 
        declare function local:func2($a) { if(matches("",$a)) then () else 4 }; 
        local:func1()</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>

   <test-case name="K2-FunctionCallExpr-13">
      <description> Have a function which recurses infintely, but which never is called. </description>
      <created by="Frans Englich" on="2008-11-13"/>
      <dependency type="spec" value="XQ10+"/>
      <test>declare function local:foo($arg) { local:foo(local:foo(1)) }; 1</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
</test-set>