<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-WhereClause"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2010/09/qt-fots-catalog file:///C:/Users/BenG/Documents/Recherche/W3C/FOTS/fots/catalog-schema.xsd">
    <description>Tests for the Window Clause production</description>
    <link type="spec" document="http://www.w3.org/TR/xquery-30/" idref="doc-xquery30-WindowClause"/>
    <link type="spec" document="XQuery" section-number="3.9.4" idref="id-windows"/>
    <dependency type="spec" value="XQ30+"/>
    
    <test-case name="SlidingWindowExpr501">
        <description>Sliding Window Clause, using variables : window, start item position, end item position</description>
        <created by="Benjamin Nguyen" on="2011-07-28"/>
        <dependency type="spec" value="XQ30+"/>
        <test>for sliding window $w in (1, 2, 3, 4) 
      start at $s when fn:true()
      end at $e when $e - $s eq 1
      return $w</test>
        <result>
            <assert-deep-eq>(1, 2, 2, 3, 3, 4, 4)</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="SlidingWindowExpr502">
        <description>Sliding Window Clause, using only keyword, using variables : window, start item position, end item position</description>
        <created by="Benjamin Nguyen" on="2011-07-28"/>
        <dependency type="spec" value="XQ30+"/>
        <test>for sliding window $w in (1, 2, 3, 4) 
      start at $s when fn:true()
      only end at $e when $e - $s eq 1
      return $w</test>
        <result>
            <assert-deep-eq>(1, 2, 2, 3, 3, 4)</assert-deep-eq>
        </result>
    </test-case>

    <test-case name="SlidingWindowExpr503">
        <description>Sliding Window Clause, with errors due to having similar variable names : http://www.w3.org/TR/xquery-30/#ERRXQST0089 or http://www.w3.org/TR/xquery-30/#ERRXQST0103</description>
        <created by="Benjamin Nguyen" on="2011-07-28"/>
        <dependency type="spec" value="XQ30+"/>
        <test>for sliding window $w in (1, 2, 3, 4) 
      start $s at $s previous $s when fn:true()
      only end $s at $s previous $s when $s - $s eq 1
      return $w</test>
        <result>
            <any-of>
                <error code="XQST0089"/>
                <error code="XQST0103"/>
            </any-of>
        </result>
    </test-case>
    
    <test-case name="TumblingWindowExpr503">
        <description>Sliding Window Clause, with errors due to having similar variable names : http://www.w3.org/TR/xquery-30/#ERRXQST0089 or http://www.w3.org/TR/xquery-30/#ERRXQST0103</description>
        <created by="Benjamin Nguyen" on="2011-07-28"/>
        <dependency type="spec" value="XQ30+"/>
        <test>for tumbling window $w in (1, 2, 3, 4) 
      start $s at $s previous $s when fn:true()
      only end $s at $s previous $s when $s - $s eq 1
      return $w</test>
        <result>
            <any-of>
                <error code="XQST0089"/>
                <error code="XQST0103"/>
            </any-of>
        </result>
    </test-case>
    
    <test-case name="TumblingWindowExpr504">
        <description>Tumbling Window Clause, with errors due to having similar variable names : http://www.w3.org/TR/xquery-30/#ERRXQST0103</description>
        <created by="Benjamin Nguyen" on="2011-07-28"/>
        <dependency type="spec" value="XQ30+"/>
        <test>for tumbling window $w in (1, 2, 3, 4) 
      start $s at $ps previous $pps when fn:true()
      only end $s at $ps previous $pps when $ps - $ps eq 1
      return $w</test>
        <result>
                <error code="XQST0103"/>
        </result>
    </test-case>
    
    <test-case name="SlidingWindowExpr504">
        <description>Sliding Window Clause, with errors due to having similar variable names : http://www.w3.org/TR/xquery-30/#ERRXQST0103</description>
        <created by="Benjamin Nguyen" on="2011-07-28"/>
        <dependency type="spec" value="XQ30+"/>
        <test>for sliding window $w in (1, 2, 3, 4) 
      start $s at $ps previous $pps when fn:true()
      only end $s at $ps previous $pps when $ps - $ps eq 1
      return $w</test>
        <result>
                <error code="XQST0103"/>
        </result>
    </test-case>
    
    <test-case name="SlidingWindowExpr505">
        <description>Sliding Window Clause, positional variable is integer : http://www.w3.org/TR/xquery-30/#dt-positional-variable</description>
        <created by="Benjamin Nguyen" on="2011-07-28"/>
        <dependency type="spec" value="XQ30+"/>
        <test>for sliding window $w in (1, 2, 3, 4) 
      start at $s when fn:true()
      end at $e  when $s - $e eq 1
      return $s</test>
        <result>
            <assert>$result[1] instance of xs:integer</assert>
        </result>
    </test-case>
    
    <test-case name="TumblingWindowExpr505">
        <description>Sliding Window Clause, positional variable is integer : http://www.w3.org/TR/xquery-30/#dt-positional-variable</description>
        <created by="Benjamin Nguyen" on="2011-07-28"/>
        <dependency type="spec" value="XQ30+"/>
        <test>for tumbling window $w in (1, 2, 3, 4) 
      start at $s when fn:true()
      end at $e  when $s - $e eq 1
      return $s</test>
        <result>
            <assert>$result[1] instance of xs:integer</assert>
        </result>
    </test-case>
    
    <test-case name="SlidingWindowExpr506">
        <description>Sliding Window Clause, windows must be delivered in order of start position</description>
        <created by="Michael Kay" on="2011-08-08"/>
        <dependency type="spec" value="XQ30+"/>
        <test><![CDATA[
          for sliding window $w in (1, 2, 3, 4, 14, 13, 12, 11) 
          start $s when fn:true()
          only end $e when $e eq $s + 10
          return string-join($w!string(), ' ')
        ]]></test>
        <result>
            <assert-deep-eq>"1 2 3 4 14 13 12 11", "2 3 4 14 13 12", "3 4 14 13", "4 14"</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="SlidingWindowExpr507">
        <description>Sliding Window Clause, effect of type declaration: success case</description>
        <created by="Michael Kay" on="2011-08-08"/>
        <dependency type="spec" value="XQ30+"/>
        <test><![CDATA[
          for sliding window $w as xs:integer+ in (1, 2, "london", 3, 4, "paris")
          start $start when $start instance of xs:integer
          only end next $beyond when $beyond instance of xs:string
          return string-join($w!string(), ' ')
        ]]></test>
        <result>
            <assert-deep-eq>"1 2", "2", "3 4", "4"</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="TumblingWindowExpr507">
        <description>Tumbling Window Clause, effect of type declaration: success case</description>
        <created by="Michael Kay" on="2011-08-08"/>
        <dependency type="spec" value="XQ30+"/>
        <test><![CDATA[
          for tumbling window $w as xs:integer+ in (1, 2, "london", 3, 4, "paris")
          start $start when $start instance of xs:integer
          only end next $beyond when $beyond instance of xs:string
          return string-join($w!string(), ' ')
        ]]></test>
        <result>
            <assert-deep-eq>"1 2", "3 4"</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="SlidingWindowExpr508">
        <description>Sliding Window Clause, effect of type declaration: failure case</description>
        <created by="Michael Kay" on="2011-08-08"/>
        <dependency type="spec" value="XQ30+"/>
        <test><![CDATA[
          for sliding window $w as xs:integer+ in (1, 2, "london", 3, 4.1, "paris")
          start $start when $start instance of xs:integer
          only end next $beyond when $beyond instance of xs:string
          return string-join($w!string(), ' ')
        ]]></test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    
    <test-case name="TumblingWindowExpr508">
        <description>Tumbling Window Clause, effect of type declaration: failure case</description>
        <created by="Michael Kay" on="2011-08-08"/>
        <dependency type="spec" value="XQ30+"/>
        <test><![CDATA[
          for tumbling window $w as xs:integer+ in (1, 2, "london", 3, 4.1, "paris")
          start $start when $start instance of xs:integer
          only end next $beyond when $beyond instance of xs:string
          return string-join($w!string(), ' ')
        ]]></test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    
    <test-case name="SlidingWindowExpr509">
        <description>Sliding Window Clause, average window size</description>
        <created by="Michael Kay" on="2011-08-08"/>
        <dependency type="spec" value="XQ30+"/>
        <test><![CDATA[
            avg(
              for sliding window $w in (1, 2, "london", 3, 4, "paris")
              start $start when $start instance of xs:integer
              only end next $beyond when $beyond instance of xs:string
              return count($w)
            )
        ]]></test>
        <result>
            <assert-eq>1.5</assert-eq>
        </result>
    </test-case>
    
    <test-case name="TumblingWindowExpr509">
        <description>Tumbling Window Clause, average window size</description>
        <created by="Michael Kay" on="2011-08-08"/>
        <dependency type="spec" value="XQ30+"/>
        <test><![CDATA[
          avg(
              for tumbling window $w in (1, 2, "london", 3, 4, "paris")
              start $start when $start instance of xs:integer
              only end next $beyond when $beyond instance of xs:string
              return count($w)
            )
        ]]></test>
        <result>
            <assert-eq>2</assert-eq>
        </result>
    </test-case>
    
 
    
</test-set>
