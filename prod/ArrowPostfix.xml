<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-ArrowPostfix" covers="arrow-operator">
    <description>Tests for the arrow operator in XPath 3.1</description>
             

    <test-case name="ArrowPostfix-001">
      <description>Arrow operator used with ceiling function</description>
      <created by="Debbie Lockett" on="2015-01-05"/>
      <dependency type="spec" value="XP31+ XQ31+"/>
      <test>4.54=>ceiling()</test>
      <result>
         <assert-deep-eq>5</assert-deep-eq>
      </result>
    </test-case>
    
    <test-case name="ArrowPostfix-002">
        <description>Arrow operator used with contains function</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>"this, that and the other"=>contains("the")</test>
        <result>
            <assert-true/>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-003">
        <description>Arrow operator used with tokenize and count functions</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>"the cat sat on the mat"=>tokenize("\s+")=>count()</test>
        <result>
            <assert-deep-eq>6</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-004">
        <description>Arrow operator used with tokenize and count functions; variable reference</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>let $f:= tokenize#2 return "the cat sat on the mat"=>$f("\s+")=>count()</test>
        <result>
            <assert-deep-eq>6</assert-deep-eq>
        </result>
    </test-case>       
    
    <test-case name="ArrowPostfix-005" covers="fn-tokenize#1">
        <description>Arrow operator used with tokenize and count functions; variable reference</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>let $f:= tokenize#1 return "the cat sat on the mat"=>$f()=>count()</test>
        <result>
            <assert-deep-eq>6</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-006">
        <description>Arrow operator used with tokenize and count functions; parenthesized expression</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>let $f:= tokenize#2 return "the cat sat on the mat"=>($f)("\s+")=>count()</test>
        <result>
            <assert-deep-eq>6</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-007">
        <description>Arrow operator used with head function</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>("first","second","third","fourth")=>head()</test>
        <result>
            <assert-deep-eq>"first"</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-008">
        <description>Arrow operator used with ceiling function; type error</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>"4.54"=>ceiling()</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-009">
        <description>Arrow operator used with concat function</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>"first second third"=>concat(" fourth")</test>
        <result>
            <assert-deep-eq>"first second third fourth"</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-010">
        <description>Arrow operator used with concat function; number of arguments error</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>"first second third"=>concat()</test>
        <result>
            <error code="XPST0017"/>
        </result>
    </test-case>
   
    <test-case name="ArrowPostfix-011">
        <description>Arrow operator used with head and ceiling functions</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>let $f:= (ceiling#1, floor#1, round#1, abs#1)=>head() return 4.54=>$f()</test>
        <result>
            <assert-deep-eq>5</assert-deep-eq>
        </result>
    </test-case>
        
    <test-case name="ArrowPostfix-012">
        <description>Arrow operator used with head and ceiling functions</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>4.54=>((ceiling#1, floor#1, round#1, abs#1) => head())()</test>
        <result>
            <assert-deep-eq>5</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-013">
        <description>Arrow operator used with ceiling function</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>4.54=>(head((ceiling#1, floor#1, round#1, abs#1)))()</test>
        <result>
            <assert-deep-eq>5</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-014">
        <description>Arrow operator used with ceiling function; syntax error</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>4.54=>(head((ceiling#1, floor#1, round#1, abs#1)))</test>
        <result>
            <error code="XPST0003"/>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-015">
        <description>Arrow operator; chain of functions</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>let $string:="one two three four five six" return $string=>upper-case()=>normalize-unicode()=>tokenize("\s+")</test>
        <result>
            <assert-deep-eq>("ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX")</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-016">
        <description>Arrow operator; precedence test</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>let $x:= 4 return $x&lt;=3.2=>ceiling()</test>
        <result>
            <assert-true/>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-017">
        <description>Arrow operator; precedence test</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>let $x:= 4 return ($x&lt;=3.2)=>boolean()</test>
        <result>
            <assert-false/>
        </result>
    </test-case>   
    
    <test-case name="ArrowPostfix-018">
        <description>Arrow operator; precedence test</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <modified by="Debbie Lockett" on="2015-01-20" change="Revised precedence as per bug 27537"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>-1=>abs()</test>
        <result>
            <assert-deep-eq>1</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-019">
        <description>Arrow operator; precedence test</description>
        <created by="Debbie Lockett" on="2015-01-05"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>(-1)=>abs()</test>
        <result>
            <assert-deep-eq>1</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-020">
        <description>Arrow operator used with a map; variable reference</description>
        <created by="Debbie Lockett" on="2015-01-07"/>
        <modified by="Debbie Lockett" on="2016-04-18" change="remove HOF dependency (dynamic function call allowed for arrays/maps)"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>let $m:= map{1:2, 2:4, 3:6} return 2=>$m()</test>
        <result>
            <assert-deep-eq>4</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-021">
        <description>Arrow operator used with a map; parenthesized expression</description>
        <created by="Debbie Lockett" on="2015-01-07"/>
        <modified by="Michael Kay" on="2015-11-26" change="add HOF dependency (dynamic function call)"/>
        <modified by="Debbie Lockett" on="2016-04-18" change="remove HOF dependency (dynamic function call allowed for arrays/maps)"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>2=>(map{1:2, 2:4, 3:6})()</test>
        <result>
            <assert-deep-eq>4</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-022">
        <description>Arrow operator used with an array; variable reference</description>
        <created by="Debbie Lockett" on="2015-01-07"/>
        <modified by="Debbie Lockett" on="2016-04-18" change="remove HOF dependency (dynamic function call allowed for arrays/maps)"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>let $array:= ['a','b','c','d','e'] return 3=>$array()</test>
        <result>
            <assert-deep-eq>'c'</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-023">
        <description>Arrow operator used with an array; parenthesized expression</description>
        <created by="Debbie Lockett" on="2015-01-07"/>
        <modified by="Michael Kay" on="2015-11-26" change="add HOF dependency (dynamic function call)"/>
        <modified by="Debbie Lockett" on="2016-04-18" change="remove HOF dependency (dynamic function call allowed for arrays/maps)"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>3=>(['a','b','c','d','e'])()</test>
        <result>
            <assert-deep-eq>'c'</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-024">
        <description>Arrow operator: function not found error</description>
        <created by="Debbie Lockett" on="2015-01-07"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>5.4=>ceil()</test>
        <result>
            <error code="XPST0017"/>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-025">
        <description>Arrow operator: type error (variable reference not a function)</description>
        <created by="Debbie Lockett" on="2015-01-07"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>let $f:= "ceiling" return 5.4=>$f()</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-026">
        <description>Precedence of "=>" is less than "//"</description>
        <created by="Debbie Lockett" on="2015-01-19"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <environment ref="works-mod"/>
        <test>//hours => count()</test>
        <result>
            <assert-eq>16</assert-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-027">
        <description>Precedence of "=>" is less than "!"</description>
        <created by="Debbie Lockett" on="2015-01-19"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>("one two", "three four five")!tokenize(.," ") => distinct-values()</test>
        <result>
            <assert-permutation>("one", "two", "three", "four", "five")</assert-permutation>
        </result>
    </test-case> 
    
    <test-case name="ArrowPostfix-028">
        <description>Precedence of "=>" is less than "!"</description>
        <created by="Debbie Lockett" on="2015-01-19"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>("one two", "three four five")!tokenize(.," ")!upper-case(.) => distinct-values()</test>
        <result>
            <assert-permutation>("ONE", "TWO", "THREE", "FOUR", "FIVE")</assert-permutation>
        </result>
    </test-case>        
    
    <test-case name="ArrowPostfix-029">
        <description>Precedence of "=>" is less than "!"; variable reference</description>
        <created by="Debbie Lockett" on="2015-01-19"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>let $a := ("one two", "three four five") return $a!tokenize(.," ") => distinct-values()</test>
        <result>
            <assert-permutation>("one", "two", "three", "four", "five")</assert-permutation>
        </result>
    </test-case> 
    
    <test-case name="ArrowPostfix-030">
        <description>Precedence of "=>" is less than "!"; variable references</description>
        <created by="Debbie Lockett" on="2015-01-19"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>let $a := ("one two", "three four five"), $b:= tokenize#2 return $a!$b(.," ") => distinct-values()</test>
        <result>
            <assert-permutation>("one", "two", "three", "four", "five")</assert-permutation>
        </result>
    </test-case> 
    
    <test-case name="ArrowPostfix-031">
        <description>Precedence of "=>" is less than "!"; syntax error</description>
        <created by="Debbie Lockett" on="2015-01-19"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>"one two three four five" => tokenize(" ") ! upper-case(.)</test>
        <result>
            <error code="XPST0003"/>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-032">
        <description>Precedence of "=>" is less than "!"</description>
        <created by="Debbie Lockett" on="2015-01-19"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>("one two three four five" => tokenize(" ")) ! upper-case(.)</test>
        <result>
            <assert-deep-eq>("ONE", "TWO", "THREE", "FOUR", "FIVE")</assert-deep-eq>
        </result>
    </test-case>

    <test-case name="ArrowPostfix-101">
        <description>Bug 29346</description>
        <created by="Abel Braaksma" on="2016-02-27"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>("one two three four five" => Q{http://www.w3.org/2005/xpath-functions}tokenize(" ")) ! upper-case(.)</test>
        <result>
            <assert-deep-eq>("ONE", "TWO", "THREE", "FOUR", "FIVE")</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-102">
        <description>Bug 29346</description>
        <created by="Abel Braaksma" on="2016-02-27"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>1 => Q{http://www.w3.org/2005/xpath-functions}sum()</test>
        <result>
            <assert-eq>1</assert-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-103">
        <description>Bug 29346</description>
        <created by="Abel Braaksma" on="2016-02-27"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>(1, 2, 3, 4) => Q{http://www.w3.org/2005/xpath-functions}sum()</test>
        <result>
            <assert-eq>10</assert-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-104">
        <description>Bug 29346</description>
        <created by="Abel Braaksma" on="2016-02-27"/>
        <modified by="Debbie Lockett" on="2016-04-18" change="add HOF dependency (named function reference)"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>(1, 2, 3, 4) => (Q{http://www.w3.org/2005/xpath-functions}sum#1)()</test>
        <result>
            <assert-eq>10</assert-eq>
        </result>
    </test-case>

    <test-case name="ArrowPostfix-105">
        <description>Bug 29346</description>
        <created by="Abel Braaksma" on="2016-02-27"/>
        <modified by="Debbie Lockett" on="2016-04-18" change="add HOF dependency (named function reference)"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>(1, 2, 3, 4) => (Q{http://www.w3.org/2005/xpath-functions}sum#2(?, 'foo'))()</test>
        <result>
            <assert-eq>10</assert-eq>
        </result>
    </test-case>
    
    <test-case name="ArrowPostfix-106">
        <description>Bug 29346</description>
        <created by="Abel Braaksma" on="2016-02-27"/>
        <modified by="Debbie Lockett" on="2016-04-18" change="add HOF dependency (named function reference)"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>() => (Q{http://www.w3.org/2005/xpath-functions}sum#2(?, 'foo'))()</test>
        <result>
            <assert-eq>"foo"</assert-eq>
        </result>
    </test-case>

    <test-case name="ArrowPostfix-107">
        <description>
            I added this test with XQueryX in mind.  The salient feature is parenthesized
            expression with more than one operand.
        </description>
        <created by="Josh Spiegel" on="2016-09-23"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>1 => ([2,3],[4,5][6])()</test>
        <result>
            <assert-eq>2</assert-eq>
        </result>
    </test-case>

</test-set>
