<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="method-text">
   <description>Tests for the "text" Serialization method</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-Serialization"/>
         
   <dependency type="spec" value="XQ30+"/>
   <dependency type="feature" value="serialization"/>      

   <test-case name="Serialization-text-1" >
      <description> A standalone attribute node cannot be serialized. </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        attribute name {<anElement/>}]]></test>
      <result>
         <assert-serialization-error code="SENR0001"/>
      </result>
   </test-case>

   <test-case name="Serialization-text-2" >
      <description> An attribute node appearing after an element cannot be serialized. </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <e/>, attribute name {<anElement/>}]]></test>
      <result>
         <assert-serialization-error code="SENR0001"/>
      </result>
   </test-case>

   <test-case name="Serialization-text-3" >
      <description> An attribute node appearing before an element cannot be serialized. </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        attribute name {<anElement/>}, <e/>]]></test>
      <result>
         <assert-serialization-error code="SENR0001"/>
      </result>
   </test-case>

   <test-case name="Serialization-text-4" >
      <description> An attribute node appearing between two element nodes cannot be serialized. </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <e/>, attribute name {<anElement/>}, <e/>]]></test>
      <result>
         <assert-serialization-error code="SENR0001"/>
      </result>
   </test-case>

   <test-case name="Serialization-text-5" >
      <description> Ensure that CR, NEL and LINE SEPARATOR in text nodes are NOT escaped when serialized. </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <a>&#xD;&#x85;&#x2028;</a>]]></test>
      <result>
         <any-of>
           <serialization-matches>&#xD;&#x85;&#x2028;</serialization-matches>
         </any-of>
      </result>
   </test-case>

   <test-case name="Serialization-text-6" >
      <description> Ensure that CR, NL, TAB, NEL and LINE SEPARATOR in attributes are NOT escaped when serialized. </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <a attr="&#xD;&#xA;&#x9;&#x85;&#x2028;"/>]]></test>
      <result>
         <any-of>
           <serialization-matches><![CDATA[^$]]></serialization-matches>
         </any-of>  
      </result>
   </test-case>

   <test-case name="Serialization-text-7" >
      <description> Use characters in a text node that in XML 1.0 are invalid, and in XML 1.1 must be escaped. #x1 - #x1F </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <dependency type="xml-version" value="1.1"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <a>{codepoints-to-string(1 to 31)}</a>]]></test>
      <result>
            <serialization-matches flags="s">^.{31}$</serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-text-7a" >
      <description> Use characters in a text node that in XML 1.0 are invalid, and in XML 1.1 must be escaped. #x1 - #x1F </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <dependency type="xml-version" value="1.0"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <a>{codepoints-to-string(1 to 31)}</a>]]></test>
      <result>
         <any-of>
            <error code="FOCH0001"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="Serialization-text-8" >
      <description> Use characters in an attribute node that in XML 1.0 are invalid, and in XML 1.1 must be escaped. #x1 - #x1F </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <dependency type="xml-version" value="1.1"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <a attr="{codepoints-to-string(1 to 31)}"></a>]]></test>
      <result>
         <serialization-matches>^$</serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-text-8a" >
      <description> Use characters in an attribute node that in XML 1.0 are invalid, and in XML 1.1 must be escaped. #x1 - #x1F </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <dependency type="xml-version" value="1.0"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <a attr="{codepoints-to-string(1 to 31)}"></a>]]></test>
      <result>
         <error code="FOCH0001"/>
      </result>
   </test-case>

   <test-case name="Serialization-text-9" >
      <description> Use characters in the range of #x7F through #x9F in an attribute node and ensure they are escaped properly. #x7F - #x9F </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <a attr="{codepoints-to-string(127 to 159)}"/>]]></test>
      <result>
         <serialization-matches>^$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-text-10" >
      <description> Use characters in the range of #x7F through #x9F in a text node and ensure they are escaped properly. #x7F - #x9F </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        <a>{codepoints-to-string(127 to 159)}</a>]]></test>
      <result>
           <serialization-matches>&#x7f;&#x80;&#x81;&#x82;&#x83;&#x84;&#x85;&#x86;&#x87;&#x88;&#x89;&#x8a;&#x8b;&#x8c;&#x8d;&#x8e;&#x8f;&#x90;&#x91;&#x92;&#x93;&#x94;&#x95;&#x96;&#x97;&#x98;&#x99;&#x9a;&#x9b;&#x9c;&#x9d;&#x9e;&#x9f;</serialization-matches>         
      </result>
   </test-case>

   <test-case name="Serialization-text-11" >
      <description> Ensure a new-line character is NOT escaped. </description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
        declare option Q{http://www.w3.org/2010/xslt-xquery-serialization}method  "text";
        "a&#xD;aa&#xD;&#xA;a&#xD;&#xA;"]]></test>
      <result>
        <serialization-matches><![CDATA[^a\raa\r?\na\r?\n$]]></serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-text-13" >
      <description>Test item-separator property</description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
      	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "text";
        declare option output:item-separator "|";
        1 to 10
      ]]></test>
      <result>
         <serialization-matches><![CDATA[1\|2\|3\|4\|5\|6\|7\|8\|9\|10]]></serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-text-14" >
      <description>Test item-separator property</description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
      	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "text";
        declare option output:item-separator "|";
        <a>{1,2,3}</a>,<b>{4,5,6}</b>
      ]]></test>
      <result>
         <serialization-matches><![CDATA[1 2 3\|4 5 6]]></serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-text-15" >
      <description>Test item-separator property</description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
      	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "text";
        declare option output:item-separator "|";
        document { 1 to 5 }
      ]]></test>
      <result>
         <serialization-matches><![CDATA[1 2 3 4 5]]></serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-text-16" >
      <description>Test item-separator property</description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
      	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "text";
        declare option output:item-separator "==";
        (1 to 4)!text{.}
      ]]></test>
      <result>
         <serialization-matches><![CDATA[1==2==3==4]]></serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-text-17" >
      <description>Angle brackets and ampersands are not escaped</description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
      	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "text";
        <a>&lt;&amp;&gt;</a>
      ]]></test>
      <result>
         <serialization-matches><![CDATA[^<&>$]]></serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-text-18" >
      <description>Comments and PIs are ignored</description>
      <created by="Michael Kay" on="2015-04-09"/>
      <test><![CDATA[
      	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "text";
        <a>The <?quick brown?>fox<!--jumped--> down</a>
      ]]></test>
      <result>
         <serialization-matches><![CDATA[^The fox down$]]></serialization-matches>
      </result>
   </test-case>


</test-set>
