<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="map-for-each"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" covers="map-for-each">
    <description>Tests for the map:for-each function introduced in XPath 3.1</description>
    <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-map-for-each"/>
    <dependency type="spec" value="XP31+ XQ31+ XT30+"/>
    <dependency type="feature" value="higherOrderFunctions"/>

    <test-case name="map-for-each-001">
        <description>Keys in empty map</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <modified by="Michael Kay, Saxonica" on="2014-09-18" 
                  change="All tests in this test set renamed (for-each-entry -- for-each)"/>
        <environment ref="map"/>
        <test>map:for-each(map{}, concat#2)</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-for-each-002">
        <description>Keys in empty map</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map:merge(()), function($k,$v){$k||$v})</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-for-each-003">
        <description>Keys in singleton map</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map{"a":1}, function($k,$v){$k})</test>
        <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>xs:string</assert-type>
                <assert-eq>"a"</assert-eq>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-004">
        <description>Keys in singleton map</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map:entry("a", "1"), function($k,$v){$k})</test>
        <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>xs:string</assert-type>
                <assert-eq>"a"</assert-eq>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-005">
        <description>Keys in two-entry map</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map:merge((map:entry("a", "1"), map:entry("b", 2))), function($k,$v){$k})</test>
        <result>
            <all-of>
                <assert>$result = "a"</assert>
                <assert>$result = "b"</assert>
                <assert-count>2</assert-count>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-006">
        <description>Size of two-entry map</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map{"a":1, "b":2}, function($k,$v){$k})</test>
        <result>
            <all-of>
                <assert>$result = "a"</assert>
                <assert>$result = "b"</assert>
                <assert-count>2</assert-count>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-007">
        <description>Elimination of duplicates</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <modified by="O'Neil Delpratt, Saxonica" on="2014-12-16" change="bug 27180: Added error code"/>
        <environment ref="map"/>
        <test>map:for-each(map{"a":1, "a":2}, function($k,$v){$k})</test>
        <result>
           <error code="XQDY0137"/>
        </result>
    </test-case>
    <test-case name="map-for-each-008">
        <description>Elimination of duplicates</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map:merge((map:entry("a",1), map:entry("a",2))), function($k,$v){$k})</test>
        <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>xs:string</assert-type>
                <assert-eq>"a"</assert-eq>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-009">
        <description>Keys after removing an entry</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map:remove(map{"a":1,"b":2}, "b"), function($k,$v){$k})</test>
        <result>
            <all-of>
                <assert-count>1</assert-count>
                <assert-type>xs:string</assert-type>
                <assert-eq>"a"</assert-eq>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-010">
        <description>Keys after removing the only entry</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map:remove(map:entry(1,2),1), function($k,$v){$k})</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-for-each-011">
        <description>Keys after removing the only two entries</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map:remove(map:remove(map{"a":1,"b":2},"b"),"a"), function($k,$v){$k})</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-for-each-012">
        <description>Keys after adding a NaN entry</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <modified by="Michael Kay, Saxonica" on="2014-03-28" change="NaN is now allowed as a key value"/>
        <environment ref="map"/>
        <test>map:for-each(map{number('NaN'):1,"b":2}, function($k,$v){$k})</test>
        <result>
            <assert-count>2</assert-count>
        </result>
    </test-case>
    <test-case name="map-for-each-013">
        <description>Size after a null remove operation</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map:remove(map{"a":1,"b":2}, "c"), function($k,$v){$k})</test>
        <result>
            <all-of>
                <assert>$result = "a"</assert>
                <assert>$result = "b"</assert>
                <assert-count>2</assert-count>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-014">
        <description>Keys for a large map</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map:merge(for $n in 1 to 500000 return map:entry($n, $n+1)), function($k,$v){$k})</test>
        <result>
            <all-of>
                <assert>$result = 1</assert>
                <assert>$result = 500000</assert>
                <assert-count>500000</assert-count>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-015">
        <description>Access both key and value</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:for-each(map{"a":1, "b":2}, function($k,$v){$k||$v})</test>
        <result>
            <all-of>
                <assert>$result = "a1"</assert>
                <assert>$result = "b2"</assert>
                <assert-count>2</assert-count>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-016">
        <description>Invert a map</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <test>map:merge(map:for-each(map{"a":1, "b":2}, function($k,$v){map{$v : $k}}))</test>
        <result>
            <all-of>
                <assert>$result(1) eq "a"</assert>
                <assert>$result(2) eq "b"</assert>
                <assert-count>1</assert-count>
            </all-of>
        </result>
    </test-case>
    <test-case name="map-for-each-017">
        <description>Convert a map to XML</description>
        <created by="Michael Kay, Saxonica" on="2014-05-13"/>
        <environment ref="map"/>
        <dependency type="spec" value="XQ31+"/>
        <test><![CDATA[<e>{map:for-each(map{"a":1, "b":2}, function($k,$v){attribute{$k}{$v}})}</e>]]></test>
        <result>
            <assert-xml><![CDATA[<e a="1" b="2"/>]]></assert-xml>
        </result>
    </test-case>
    
 

</test-set>
